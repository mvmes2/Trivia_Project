{"version":3,"sources":["images/back_4.png","images/gear.png","images/about.png","images/back_3.png","images/trophy_1.png","trivia.png","sounds/ShowDoMilhaoTheme.mp3","sounds/certaResposta.mp3","sounds/proximaPergunta.mp3","sounds/Errou.mp3","images/quots_2.png","images/quots_1.png","images/header_base.png","images/back_1.png","components/btnSetupScreen.js","services/GravatarApi.js","redux/actions/index.js","components/InputName.js","components/InputEmail.js","components/PlayBtn.js","services/TriviaApi.js","components/SoundControl.js","pages/Login.js","components/CategoryOptions.js","pages/Setup.js","components/Timer.js","helpers/FunctionsHelpers.js","components/QuestionPainel.js","components/Questions.js","components/Header.js","helpers/FormatQuestions.js","components/BackToLoginGame.js","components/Loading.js","pages/Game.js","pages/FeedBack.js","pages/Ranking.js","pages/About.js","App.js","redux/reducers/questions.js","redux/reducers/player.js","redux/reducers/gameMechanics.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","btnSetupScreen","to","style","textDecoration","className","src","settingsIMG","alt","type","data-testid","Component","ENDPOINT","hash","a","fetch","response","json","data","console","log","fetchGravatar","sendQuestions","questions","incorrect","correct","InitiateTimer","startTimer","modifyTimer","boolean","modifyNextBtn","addQuestionsPlayed","sendConfigOptionsAction","category","answear","dificulty","modifyPlayingTruOrFalse","bool","InputName","func","this","props","htmlFor","id","onChange","placeholder","defaultProps","InputEmail","PlayBtn","onClick","getToken","token","getQuestions","receiveToken","difficulty","URL","Number","results","sfx","main","Howl","mainTheme","volume","certa","Certa","proxima","Proxima","errou","Errou","stopMain","stop","playMain","playing","play","playProxima","Login","state","inputEmail","showImg","redirect","redirectToAbout","handleOnChangeInputValidate","bind","playHandle","showProfileImg","localStorageSave","resetStoreInfos","aboutBtn","aboutBtnClickHandler","soundTrue","document","querySelector","disabled","setState","resetStorePoints","e","name","button","email","checkValidity","value","length","target","inputName","sendImgSrc","playingfalse","md5","toString","imgHash","score","assertions","player","playerName","gravatarEmail","playerEmail","photo","playerPhoto","categoryConfig","getCategoryConfigFromStore","answearConfig","getAnswearConfigFromStore","dificultyConfig","getDificultyConfigFromStore","localStorage","JSON","stringify","about","logo","connect","playerToken","srcGravatarImg","gameMechanics","categoryValue","answearType","playSound","dispatch","sendGravatarSrcImg","sendQuestionList","questionList","resetStoreScores","PropTypes","CategoryOptions","Setup","appliedConfig","dificultyRender","confirmBtnRender","confirmBtnClickHandler","answearTypeRender","categoryTypeRender","selectChangeHandler","SoundClickHandler","soundBtnRender","allowSound","size","map","item","index","key","sendConfigToStore","color","setup","back","modifyPlaySound","Timer","tick","ResetTimer","SendStopAndResetFunc","clock","setInterval","clearInterval","sendCurrentTime","globalTime","timeToRespond","running","timerRunning","time","decreaseTimeToRespond","startGlobalTimer","func2","reset","INCORRECT","CORRECT","changeBorderColor","wrong","querySelectorAll","forEach","element","border","disableBtnsAfterTimer","allowAbleBtnsAfterNextClick","randomizeCorrectQuestion","randomNumberZeroToTwo","Math","floor","random","gridArea","randomNumberZeroToThree","QuestionPainel","triviaQuestions","idTrivia","questionNumber","questionsPlayed","Questions","generateQuestionsBtnFunc","manageCorrectAnswear","localStorageNewSave","sendAbleQuestBtnFunc","addPoint","globalTimer","showNextBtn","stopTimer","point","multiplier","parse","incorrectQuest","correctAnswears","validateScore","shouldShowNextBtn","question","quot1","quot2","incorrectAnswears","runningTimer","stopTimerFunc","increase","increasePlayerScore","allowQuestionsBtnAfterNextClick","modifyTimerRunning","increasePlayedQuestions","arrayOf","Array","Header","profileImg","profileName","profileScore","FormatCorrectQuestion","replace","FormatIncorrectQuestions","quest","FormatQuestions","BackToLoginGame","Loading","Game","redirectToFeedBack","componentMounted","handleClickNextBtn","resetQuestionsBorderColor","getQuestionList","checkApiResponseValidity","sendRecoveredPlayerInfo","sendRecoveredGameConfigToStore","img","setTimeout","getDifficultyConfigFromStore","receiveQuestions","push","incorrectList","incorrect_answers","correctList","correct_answer","incorrectQuestions","correctQuestions","questionListLength","playingTrue","increaseId","AddTimeToTimer","resetTimer","allowQuestionsBtn","totalQuestions","resetQuestionsId","resetTimerFunc","stopTimerfunc","allowQuestionsBtns","questionIdIncrease","timerBoolean","inc","corre","recoverNameAndEmailFromRefresh","FeedBack","handleClickRankBtn","createRankingStorage","playAgain","PlayAgainClickhandler","userRanking","picture","ranking","localStorageRanking","assertion","trophy","Ranking","redirectHome","renderRanking","backHomeClickHandler","sort","b","user","About","HomeBtnRender","arrow1","arrow2","App","exact","path","render","component","INITIAL_STATE","trivia","action","rootReducers","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,sUCgC5BC,E,4JA3Bb,WACE,OACE,kBAAC,IAAD,CAAMC,GAAG,SAASC,MAAQ,CAAEC,eAAgB,SAC1C,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,wBACb,yBAAKC,IAAMC,IAAcC,IAAI,sBAAgBH,UAAU,sBAEzD,4BACEI,KAAK,SACLC,cAAY,eACZL,UAAU,2BAHZ,6B,GARmBM,aCJvBC,EAAW,mC,4CAEjB,WAA6BC,GAA7B,iBAAAC,EAAA,+EAE2BC,MAAM,GAAD,OAAIH,GAAJ,OAAeC,IAF/C,cAEUG,EAFV,gBAGuBA,EAASC,OAHhC,cAGUC,EAHV,OAIIC,QAAQC,IAAIF,GAJhB,kBAKWA,GALX,4H,sBAWeG,M,4CCgBf,SAASC,EAAcC,EAAWC,EAAWC,GAC3C,MAAO,CACLhB,KA9BmB,iBA+BnBc,YACAC,YACAC,WAWJ,SAASC,EAAcC,GACrB,MAAO,CACLlB,KA5CmB,iBA6CnBkB,cAmBJ,SAASC,EAAYC,GACnB,MAAO,CACLpB,KA/DiB,eAgEjBoB,WAYJ,SAASC,EAAcD,GACrB,MAAO,CACLpB,KA5EoB,kBA6EpBoB,WAWJ,SAASE,EAAmBR,GAC1B,MAAO,CACLd,KAxFyB,uBAyFzBc,aA2BJ,SAASS,EAAwBC,EAAUC,EAASC,GAClD,MAAO,CACL1B,KAjHwB,sBAkHxBwB,WACAC,UACAC,aAIJ,SAASC,EAAwBC,GAC/B,MAAO,CACL5B,KAzH8B,4BA0H9B4B,Q,ICvIEC,E,4JACJ,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACR,OACE,2BAAOG,QAAQ,YAAYrC,UAAU,aACnC,2BACEI,KAAK,OACLkC,GAAG,YACHjC,cAAY,oBACZkC,SAAWL,EACXM,YAAY,OACZxC,UAAU,wB,GAXIM,aAkBT2B,IAMfA,EAAUQ,aAAe,CACvBP,KAAM,I,ICzBFQ,E,4JACJ,WACE,IAAQR,EAASC,KAAKC,MAAdF,KACR,OACE,2BAAOG,QAAQ,aAAarC,UAAU,cACpC,2BACEI,KAAK,QACLkC,GAAG,aACHjC,cAAY,uBACZkC,SAAWL,EACXM,YAAY,QACZxC,UAAU,wB,GAXKM,aAkBVoC,IAMfA,EAAWD,aAAe,CACxBP,KAAM,I,ICzBFS,E,4JACJ,WACE,IAAQT,EAASC,KAAKC,MAAdF,KACR,OACE,4BACE9B,KAAK,SACLC,cAAY,WACZiC,GAAG,WACHM,QAAUV,EACVlC,UAAU,gBALZ,a,GAJgBM,aAiBPqC,IAMfA,EAAQF,aAAe,CACrBP,KAAM,I,8BCxBOW,I,2EAAf,8BAAApC,EAAA,+EAE2BC,MALV,qDAGjB,cAEUC,EAFV,gBAGuBA,EAASC,OAHhC,cAGUC,EAHV,yBAIWA,EAAKiC,OAJhB,4H,+BAUeC,E,oFAAf,WAA4BC,EAAcpB,EAAUC,EAASoB,GAA7D,mBAAAxC,EAAA,6DACMyC,EAAM,GAGRA,EADEtB,GAAYC,GAAWoB,EACtB,oBAAgBE,OAAOvB,GAAvB,uBAA+CqB,EAA/C,iBAAkEpB,EAAlE,WACMD,EACN,oBAAgBuB,OAAOvB,GAAvB,WACMqB,EACN,sBAAkBA,EAAlB,WACMpB,EACN,gBAAYA,EAAZ,WAEG,UAZV,kBAgB2BnB,MAAM,GAAD,OA5BN,wCA4BM,OAAwBwC,GAAxB,OAA8BF,IAhB9D,cAgBUrC,EAhBV,gBAiB4BA,EAASC,OAjBrC,cAiBUM,EAjBV,yBAkBWA,EAAUkC,SAlBrB,4H,6GCPMC,GAAM,CACVC,KAAM,IAAIC,OAAK,CACbtD,IAAK,CAACuD,KACNC,OAAQ,MAEVC,MAAO,IAAIH,OAAK,CACdtD,IAAK,CAAC0D,QAERC,QAAS,IAAIL,OAAK,CAChBtD,IAAK,CAAC4D,QAERC,MAAO,IAAIP,OAAK,CACdtD,IAAK,CAAC8D,SAIV,SAASC,KACPX,GAAIC,KAAKW,OAGX,SAASC,KACFb,GAAIC,KAAKa,WACZd,GAAIC,KAAKc,OAIb,SAASC,KACPhB,GAAIO,QAAQQ,O,ICfRE,G,kDACJ,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,CACXC,WAAY,GACZC,SAAS,EACT3B,MAAO,GACP4B,UAAU,EACVC,iBAAiB,GAEnB,EAAKC,4BAA8B,EAAKA,4BAA4BC,KAAjC,gBACnC,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBACxB,EAAK7B,aAAe,EAAKA,aAAa6B,KAAlB,gBACpB,EAAKI,gBAAkB,EAAKA,gBAAgBJ,KAArB,gBACvB,EAAKK,SAAW,EAAKA,SAASL,KAAd,gBAChB,EAAKM,qBAAuB,EAAKA,qBAAqBN,KAA1B,gBAhBX,E,qDAmBnB,WACwB1C,KAAKC,MAAnBgD,WACOlB,KACf/B,KAAKa,eACLb,KAAK8C,kBACUI,SAASC,cAAc,aAC/BC,UAAW,I,iEAGpB,4BAAA9E,EAAA,sEACyBoC,IADzB,OACQlC,EADR,OAEEwB,KAAKqD,SAAS,CACZ1C,MAAOnC,IAHX,gD,mFAOA,YAGE8E,EAF6BtD,KAAKC,MAA1BqD,kBACK,O,yCAIf,SAA4BC,GAC1B,IAAMC,EAAON,SAASC,cAAc,cAC9BM,EAASP,SAASC,cAAc,aAChCO,EAAQR,SAASC,cAAc,eAEjCO,EAAMC,iBAAmBD,EAAME,MAAMC,QAAU,GAAKL,EAAKI,MAAMC,QAAU,EAC3EJ,EAAOL,UAAW,IAEjBM,EAAMC,iBACJH,EAAKI,MAAMC,OAAS,GACpBH,EAAME,MAAMC,OAAS,KACxBJ,EAAOL,UAAW,GAEpBpD,KAAKqD,SAAL,eACGE,EAAEO,OAAO3D,GAAKoD,EAAEO,OAAOF,U,+DAI5B,4CAAAtF,EAAA,+DAC2C0B,KAAKoC,MAAtCC,EADV,EACUA,WAAY0B,EADtB,EACsBA,UAAWpD,EADjC,EACiCA,MADjC,EAEuCX,KAAKC,MAAlC+D,EAFV,EAEUA,WAAYC,EAFtB,EAEsBA,aAEd5F,EAAO6F,IAAI7B,GAAY8B,WAJ/B,SAKQtF,EAAcR,GALtB,OAME2B,KAAKqD,SAAS,CACZf,SAAS,EACT8B,QAAS/F,IAELP,EAVR,0CAUiDO,EAVjD,QAWE2F,EAAWD,EAAWjG,EAAKuE,EAAY1B,GACvCX,KAAK6C,mBACL7C,KAAKqD,SAAS,CACZd,UAAU,IAEZV,KACAoC,GAAa,GAjBf,iD,oFAoBA,WACE,IAAQtD,EAAUX,KAAKoC,MAAfzB,MACR,EAMIX,KAAKC,MANDoE,EAAR,EAAQA,MACNC,EADF,EACEA,WAMIC,EAAS,CACbA,OAAQ,CACNf,KATJ,EAEEgB,WAQEF,aACAD,QACAI,cAZJ,EAGEC,YAUEC,MAbJ,EAIEC,YAUEC,eAdJ,EAKEC,2BAUEC,cAfJ,EAK8BC,0BAW1BC,gBAhBJ,EAKyDC,8BAczDC,aAAa/C,MAAQgD,KAAKC,UAAUd,GACpCY,aAAaxE,MAAQyE,KAAKC,UAAU1E,K,4BAGtC,WACE,IAAQyD,EAAYpE,KAAKoC,MAAjBgC,QACR,OACE,yBAAKpG,IAAI,cAAcF,IAAG,0CAAsCsG,EAAtC,Y,sBAI9B,WACE,OACE,yBAAKvG,UAAU,iBACb,4BACEI,KAAK,SACLJ,UAAU,yBACV4C,QAAUT,KAAKgD,sBAHjB,SAOA,yBAAKnF,UAAU,qBACb,yBAAKC,IAAMwH,IAAQtH,IAAI,QAAQH,UAAU,sB,kCAMjD,WACEmC,KAAKqD,SAAS,CACZb,iBAAiB,M,oBAIrB,WACE,MAA+CxC,KAAKoC,MAA5CE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,gBAE3B,OAAID,EAAiB,kBAAC,IAAD,CAAU7E,GAAG,UAC9B8E,EAAwB,kBAAC,IAAD,CAAU9E,GAAG,WAGvC,6BACE,4BAAQG,UAAU,cAChB,yBAAKC,IAAMyH,IAAO1H,UAAU,WAAWG,IAAI,SAC3C,6BAASH,UAAU,mBACjB,0BAAMA,UAAU,iCACd,kBAAC,EAAD,CAAWkC,KAAOC,KAAKyC,8BACvB,kBAAC,EAAD,CAAY1C,KAAOC,KAAKyC,8BACxB,kBAAC,EAAD,CAAS1C,KAAOC,KAAK2C,cAEvB,kBAAC,EAAD,MACA,uBAAMI,SAAN,MACET,EAAUtC,KAAK4C,iBAAmB,U,GAzJ5BzE,aAsLLqH,gBArBS,SAACpD,GAAD,MAAY,CAClCqD,YAAarD,EAAMmC,OAAO5D,MAC1B6D,WAAYpC,EAAMmC,OAAOf,KACzBkB,YAAatC,EAAMmC,OAAOE,cAC1BH,WAAYlC,EAAMmC,OAAOD,WACzBD,MAAOjC,EAAMmC,OAAOF,MACpBO,YAAaxC,EAAMmC,OAAOmB,eAC1BZ,2BAA4B1C,EAAMuD,cAAcC,cAChDZ,0BAA2B5C,EAAMuD,cAAcE,YAC/CX,4BAA6B9C,EAAMuD,cAAchG,UACjDsD,UAAWb,EAAMrD,UAAU+G,cAGF,SAACC,GAAD,MAAe,CACxC/B,WAAY,SAACD,EAAWjG,EAAKuE,EAAY1B,GAA7B,OACVoF,EN/KJ,SAA4BvC,EAAM1F,EAAK4F,EAAO/C,GAC5C,MAAO,CACL1C,KArB0B,wBAsB1BuF,OACA1F,MACA4F,QACA/C,SMyKSqF,CAAmBjC,EAAWjG,EAAKuE,EAAY1B,KAC1DsF,iBAAkB,SAACC,GAAD,OAAkBH,EAASjH,EAAcoH,KAC3D5C,iBAAkB,SAACe,EAAOC,GAAR,OAAuByB,ENvF3C,SAA0B1B,EAAOC,GAC/B,MAAO,CACLrG,KAlGuB,qBAmGvBoG,QACAC,cMmFgD6B,CAAiB9B,EAAOC,KAC1EL,aAAc,SAACpE,GAAD,OAAUkG,EAASnG,EAAwBC,QAG5C2F,CAA6CrD,IAiB5DA,GAAM7B,aAAe,CACnB0D,WAAY,GACZV,iBAAkB8C,IAAUrG,KAC5BkE,aAAcmC,IAAUrG,M,iCCrHXsG,GAvGS,CACtB,CACE5G,SAAU,eACVmE,MAAO,IAET,CACEnE,SAAU,uBACVmE,MAAO,GAET,CACEnE,SAAU,yBACVmE,MAAO,IAET,CACEnE,SAAU,yBACVmE,MAAO,IAET,CACEnE,SAAU,4BACVmE,MAAO,IAET,CACEnE,SAAU,kCACVmE,MAAO,IAET,CACEnE,SAAU,+BACVmE,MAAO,IAET,CACEnE,SAAU,4BACVmE,MAAO,IAET,CACEnE,SAAU,qCACVmE,MAAO,IAET,CACEnE,SAAU,+CACVmE,MAAO,IAET,CACEnE,SAAU,2CACVmE,MAAO,IAET,CACEnE,SAAU,6BACVmE,MAAO,IAET,CACEnE,SAAU,wBACVmE,MAAO,IAET,CACEnE,SAAU,2BACVmE,MAAO,IAET,CACEnE,SAAU,4BACVmE,MAAO,IAET,CACEnE,SAAU,oCACVmE,MAAO,IAET,CACEnE,SAAU,YACVmE,MAAO,IAET,CACEnE,SAAU,WACVmE,MAAO,IAET,CACEnE,SAAU,YACVmE,MAAO,IAET,CACEnE,SAAU,cACVmE,MAAO,IAET,CACEnE,SAAU,cACVmE,MAAO,IAET,CACEnE,SAAU,OACVmE,MAAO,IAET,CACEnE,SAAU,eACVmE,MAAO,IAET,CACEnE,SAAU,eACVmE,MAAO,IAET,CACEnE,SAAU,cACVmE,MAAO,KCtFL0C,G,kDACJ,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,CACXyC,eAAgB,GAChBE,cAAe,GACfE,gBAAiB,GACjBsB,eAAe,GAEjB,EAAKC,gBAAkB,EAAKA,gBAAgB9D,KAArB,gBACvB,EAAK+D,iBAAmB,EAAKA,iBAAiB/D,KAAtB,gBACxB,EAAKgE,uBAAyB,EAAKA,uBAAuBhE,KAA5B,gBAC9B,EAAKiE,kBAAoB,EAAKA,kBAAkBjE,KAAvB,gBACzB,EAAKkE,mBAAqB,EAAKA,mBAAmBlE,KAAxB,gBAC1B,EAAKmE,oBAAsB,EAAKA,oBAAoBnE,KAAzB,gBAC3B,EAAKoE,kBAAoB,EAAKA,kBAAkBpE,KAAvB,gBACzB,EAAKqE,eAAiB,EAAKA,eAAerE,KAApB,gBAfL,E,qDAkBnB,WACE,MAAkC1C,KAAKC,MAA/B+G,EAAR,EAAQA,WACR,GADA,EAAoB/D,UAGlB,OADApB,KACOmF,GAAW,GAEpBA,GAAW,GACXjF,O,4BAGF,WAEE,OADsB/B,KAAKC,MAAnBgD,UAGJ,kBAAC,KAAD,CACEpF,UAAU,YACVoJ,KAAK,MACLxG,QAAUT,KAAK8G,oBAGf,kBAAC,KAAD,CACEjJ,UAAU,YACVoJ,KAAK,MACLxG,QAAUT,KAAK8G,sB,gCAKzB,WACE,OACET,GACGa,KAAI,SAACC,EAAMC,GAAP,OACH,4BAAQC,IAAMD,EAAQxD,MAAQuD,EAAKvD,OAASuD,EAAK1H,e,+BAKzD,WACE,IAAQsF,EAAkB/E,KAAKoC,MAAvB2C,cACR,OACE,4BACE5E,GAAG,gBACHyD,MAAQmB,EACR3E,SAAWJ,KAAK6G,oBAChBhJ,UAAU,sBAEV,4BAAQ+F,MAAM,IAAd,gBACA,4BAAQA,MAAM,YAAd,oBACA,4BAAQA,MAAM,WAAd,uB,6BAKN,WACE,IAAQqB,EAAoBjF,KAAKoC,MAAzB6C,gBACR,OACE,4BACE9E,GAAG,kBACHyD,MAAQqB,EACR7E,SAAWJ,KAAK6G,oBAChBhJ,UAAU,sBAEV,4BAAQ+F,MAAM,IAAd,gBACA,4BAAQA,MAAM,QAAd,YACA,4BAAQA,MAAM,UAAd,YACA,4BAAQA,MAAM,QAAd,W,oCAKN,WACE,MAGiC5D,KAAKoC,MAFpB3C,EADlB,EACEoF,eACenF,EAFjB,EAEEqF,cACiBpF,EAHnB,EAGEsF,iBAEFqC,EAD8BtH,KAAKC,MAA3BqH,mBACU7H,EAAUC,EAASC,GACrCK,KAAKqD,SAAS,CACZkD,eAAe,M,iCAInB,SAAoBhD,GAAI,IAAD,EACrBvD,KAAKqD,UAAL,mBACGE,EAAEO,OAAO3D,GAAKoD,EAAEO,OAAOF,OAD1B,+BAEiB,GAFjB,M,8BAMF,WACE,IAAQ2C,EAAkBvG,KAAKoC,MAAvBmE,cACR,OAEE,yBAAK1I,UAAU,oBACb,4BACEI,KAAK,SACLJ,UAAU,2BACV4C,QAAUT,KAAK0G,wBAHjB,+BAOEH,EAEE,wBACE5I,MAAQ,CAAE4J,MAAO,UADnB,kCAMA,M,oBAKV,WACE,IAAQ1C,EAAmB7E,KAAKoC,MAAxByC,eACR,OACE,oCACE,yBAAKhH,UAAU,gBACb,yBAAKC,IAAM0J,IAAQxJ,IAAI,UAAUH,UAAU,mBAC3C,wBAAIK,cAAY,iBAAiBL,UAAU,eAA3C,wBAEF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BACb,2BAAOqC,QAAQ,mBAAf,eAEGF,KAAKwG,mBAER,2BAAOtG,QAAQ,iBAAf,oBAEGF,KAAK2G,qBAER,2BAAOzG,QAAQ,kBAAf,aAEE,4BACEC,GAAG,iBACHyD,MAAQiB,EACRzE,SAAWJ,KAAK6G,oBAChBhJ,UAAU,sBAETmC,KAAK4G,uBAGR5G,KAAK+G,iBACN,yBAGL,6BACC/G,KAAKyG,mBACN,6BACA,kBAAC,IAAD,CAAM/I,GAAG,kBAAkBC,MAAQ,CAAEC,eAAgB,SACnD,yBAAKC,UAAU,mBACb,yBAAKC,IAAM2J,KAAOzJ,IAAI,SAASH,UAAU,kBACzC,4BACEI,KAAK,SACLC,cAAY,cACZL,UAAU,2BAHZ,0B,GA5KQM,aAoMLqH,gBAVS,SAACpD,GAAD,MAAY,CAClCa,UAAWb,EAAMrD,UAAU+G,cAGF,SAACC,GAAD,MAAe,CACxCuB,kBAAmB,SAAC7H,EAAUC,EAASC,GAApB,OACjBoG,EAASvG,EAAwBC,EAAUC,EAASC,KACtDqH,WAAY,SAACnH,GAAD,OAAUkG,ERhExB,SAAyBlG,GACvB,MAAO,CACL5B,KA/HsB,oBAgItB4B,QQ6D6B6H,CAAgB7H,QAGlC2F,CAA6Cc,IAQ5DA,GAAMhG,aAAe,CACnBgH,kBAAmBlB,IAAUrG,KAC7BiH,WAAYZ,IAAUrG,M,ICpNlB4H,G,kDACJ,WAAY1H,GAAQ,IAAD,8BACjB,cAAMA,IACD2H,KAAO,EAAKA,KAAKlF,KAAV,gBACZ,EAAKZ,KAAO,EAAKA,KAAKY,KAAV,gBACZ,EAAKmF,WAAa,EAAKA,WAAWnF,KAAhB,gBAJD,E,qDAOnB,WAAqB,IAAD,QAElBoF,EADiC9H,KAAKC,MAA9B6H,sBACa9H,KAAK8B,KAAM9B,KAAK6H,YAErC7H,KAAK+H,MAAQC,aAAY,kBAAM,EAAKJ,SADxB,O,kCAId,WACEK,cAAcjI,KAAK+H,S,wBAGrB,WAAc,IAAD,OAEX/H,KAAK+H,MAAQC,aAAY,kBAAM,EAAKJ,SADxB,O,kBAId,WACEK,cAAcjI,KAAK+H,S,kBAGrB,WACE,MAAwC/H,KAAKC,OAC7CiI,EADA,EAAQA,iBAAR,EAAyBC,WACI,K,oBAG/B,WACE,IAAQA,EAAenI,KAAKC,MAApBkI,YAKJA,GAJS,GAIWnI,KAAK8B,OACzBqG,GAAcA,EAHH,KAIZjF,SAASC,cAAc,oBAAoBxF,MAAM4J,MAAQ,sBAExDY,GAAcA,GAPN,MAQGjF,SAASC,cAAc,oBAC/BxF,MAAM4J,MAAQ,sBAErB,OACE,6BACE,wBAAI1J,UAAU,cAAd,uBAEE,0BAAMA,UAAU,wCAAhB,WAA4DsK,U,GAnDlDhK,aAqELqH,gBALS,SAACpD,GAAD,MAAY,CAClC+F,WAAY/F,EAAMuD,cAAcyC,cAChCC,QAASjG,EAAMuD,cAAc2C,iBARJ,SAACvC,GAAD,MAAe,CACxCmC,gBAAiB,SAACK,GAAD,OAAUxC,ET5B7B,SAA+BwC,GAC7B,MAAO,CACLtK,KAtC6B,2BAuC7BsK,QSyBkCC,CAAsBD,KAC1DE,iBAAkB,SAACtJ,GAAD,OAAgB4G,EAAS7G,EAAcC,KACzD2I,qBAAsB,SAAC/H,EAAM2I,GAAP,OAAiB3C,ETfhC,CACL9H,KAlDgC,sBAmDhC6D,KSamE/B,ETZnE4I,MSYyED,QAQ9DlD,CAA6CmC,IAU5DA,GAAMrH,aAAe,CACnBwH,qBAAsB,GACtBI,gBAAiB,GACjBC,WAAY,I,4CCzFRS,GAAY,qBACZC,GAAU,mBAEhB,SAASC,KACP,IAAMC,EAAQ7F,SAAS8F,iBAAiBJ,IAClC3J,EAAUiE,SAASC,cAAc0F,IACvCE,EAAME,SAAQ,SAACC,GACbA,EAAQvL,MAAMwL,OAAS,8BAEzBlK,EAAQtB,MAAMwL,OAAS,4BAGzB,SAASC,KACP,IAAML,EAAQ7F,SAAS8F,iBAAiBJ,IAClC3J,EAAUiE,SAASC,cAAc0F,IACvCE,EAAME,SAAQ,SAACC,GACbA,EAAQ9F,UAAW,KAErBnE,EAAQmE,UAAW,EAGrB,SAASiG,KACP,IAAMN,EAAQ7F,SAAS8F,iBAAiBJ,IAClC3J,EAAUiE,SAASC,cAAc0F,IACvCE,EAAME,SAAQ,SAACC,GACbA,EAAQ9F,UAAW,KAErBnE,EAAQmE,UAAW,EAGrB,SAASkG,KAEP,GAAiC,IADPpG,SAAS8F,iBAAiB,qBAC9BnF,OAAc,CAClC,IAEM0F,EAAwBC,KAAKC,MADvB,EAC6BD,KAAKE,UAI9C,OAHiBxG,SAASC,cAAc,qBAC/BxF,MAAMgM,SAJI,CAAC,IAAK,KAIYJ,QACrC5K,QAAQC,IAAI,4CAGd,IAEMgL,EAA0BJ,KAAKC,MADxB,EAC8BD,KAAKE,UAC/BxG,SAASC,cAAc,qBAC/BxF,MAAMgM,SAJI,CAAC,IAAK,IAAK,IAAK,KAIEC,GACrCjL,QAAQC,IAAI,yC,IC1CRiL,G,4JACJ,WACE,MAAsD7J,KAAKC,MAAnD6J,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,eAC3BlJ,EAAegJ,EAAgBC,GAA/BjJ,WACR,OACE,yBAAKjD,UAAU,kBACb,oDACemD,OAAOgJ,GADtB,UAGA,+DAEIlJ,S,GAXiB3C,aAwBdqH,gBANS,SAACpD,GAAD,MAAY,CAClC0H,gBAAiB1H,EAAMrD,UAAUA,UACjCgL,SAAU3H,EAAMrD,UAAUgL,SAC1BC,eAAgB5H,EAAMmC,OAAO0F,mBAGhBzE,CAAyBqE,IAQxCA,GAAevJ,aAAe,CAC5ByJ,SAAU,EACVD,gBAAiB,GACjBE,eAAgB,G,ICtBZE,G,kDACJ,WAAYjK,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,GAEb,EAAK+H,yBAA2B,EAAKA,yBAAyBzH,KAA9B,gBAChC,EAAK0H,qBAAuB,EAAKA,qBAAqB1H,KAA1B,gBAC5B,EAAK2H,oBAAsB,EAAKA,oBAAoB3H,KAAzB,gBANV,E,qDASnB,WACE4G,KACA,MAA4CtJ,KAAKC,MAAzCqK,EAAR,EAAQA,qBAAR,EAA8BrH,WACff,KACfoI,EAAqBjB,M,kCAGvB,WACE,MAC2BrJ,KAAKC,MADxBsK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAalG,EAA/B,EAA+BA,WAAYmG,EAA3C,EAA2CA,YACzCC,EADF,EACEA,UAAWzH,EADb,EACaA,UACbyH,IACA,IACMC,EADM,GACSH,EAAcxK,KAAK4K,WACxC5K,KAAKqK,oBAAoBM,EAAOrG,GAChCiG,EAASI,EAAQrG,EAAa,GAC9BmG,GAAY,GACZrB,KACInG,GPHN/B,GAAIK,MAAMU,S,2BOMV,SAAcsB,GACZ,MAGIvD,KAAKC,MAFP6J,EADF,EACEA,gBAA2B3J,EAD7B,EACmB4J,SACjBU,EAFF,EAEEA,YAAaC,EAFf,EAEeA,UAAWzH,EAF1B,EAE0BA,UAElBnC,EAAegJ,EAAgB3J,GAA/BW,WAGR,OAFAd,KAAK4K,WAAa,EAEV9J,GACR,IAAK,OACHd,KAAK4K,WAAa,EAClB,MAEF,IAAK,SACH5K,KAAK4K,WAAa,EAClB,MAEF,IAAK,OACH5K,KAAK4K,WAAa,EAMA,oBAAhBrH,EAAEO,OAAO3D,GACXH,KAAKoK,uBACoB,sBAAhB7G,EAAEO,OAAO3D,KACd8C,GP7BR/B,GAAIS,MAAMM,OO8BNmH,KACAsB,IACAD,GAAY,M,iCAIhB,SAAoBE,EAAOrG,GACzB,MAI6DtE,KAAKC,MAHhEuE,EADF,EACEA,WACAE,EAFF,EAEEA,YACAI,EAHF,EAGEA,2BACAE,EAJF,EAIEA,0BAA2BE,EAJ7B,EAI6BA,4BAGvBX,EAAS,CACbA,OAAQ,CACNf,KAAMgB,EACNF,WAAYA,EAAa,EACzBD,MANkBe,KAAKyF,MAAM1F,aAAa/C,OAAOmC,OAAOF,MAMjCsG,EACvBlG,cAAeC,EACfC,MAPYS,KAAKyF,MAAM1F,aAAa/C,OAAOmC,OAAOI,MAQlDE,eAAgBC,EAChBC,cAAeC,EACfC,gBAAiBC,IAGrBC,aAAa/C,MAAQgD,KAAKC,UAAUd,K,sCAGtC,WAA4B,IAAD,OACzB,EACmBvE,KAAKC,MADhB6K,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBACZ5K,EADZ,EACE4J,SACF,OACE,yBAAKlM,UAAU,qBACXiN,EAAe3K,GAAI+G,KAAI,SAACC,EAAMC,GAAP,OACvB,4BACEjH,GAAG,oBACHlC,KAAK,SACLoJ,IAAG,uBAAmBD,GACtBvJ,UAAU,mBACVK,cAAA,uBAA8BkJ,GAC9B3G,QAAU,SAAC8C,GAAQuF,KAAqB,EAAKkC,cAAczH,KAEzD4D,MAGN,4BACElJ,KAAK,SACLkC,GAAG,kBACHtC,UAAU,oCACVK,cAAY,iBACZuC,QAAU,SAAC8C,GAAQuF,KAAqB,EAAKkC,cAAczH,KAEzDwH,EAAgB5K,O,oBAM1B,WACE,MAGIH,KAAKC,MAFP6J,EADF,EACEA,gBAA2B3J,EAD7B,EACmB4J,SAAchK,EADjC,EACiCA,KAAMyK,EADvC,EACuCA,YAAaS,EADpD,EACoDA,kBAClDR,EAFF,EAEEA,YAEF,EAA+BX,EAAgB3J,GAAvCV,EAAR,EAAQA,SAAUyL,EAAlB,EAAkBA,SAOlB,OANIV,GAAe,IACjBpB,KACAN,KACA2B,GAAY,IAIZ,oCACE,kBAAC,GAAD,MACA,yBAAK5M,UAAU,sBACb,yBAAKA,UAAU,wBACb,yBAAKG,IAAI,GAAGF,IAAMqN,KAAQtN,UAAU,WACpC,yBAAKA,UAAU,gBACb,kBAAC,GAAD,MACA,wBAAIK,cAAY,oBAAoBL,UAAU,iBAA9C,YAEI4B,GAEJ,wBAAIvB,cAAY,gBAAgBL,UAAU,kBAAmBqN,IAE/D,yBAAKlN,IAAI,GAAGF,IAAMsN,KAAQvN,UAAU,YAEtC,6BACImC,KAAKmK,2BAELc,EACE,4BACEhN,KAAK,SACLwC,QAAUV,EACVlC,UAAU,eACVK,cAAY,YAJd,cAOa,U,GA5JLC,aAgMTqH,gBA3BS,SAACpD,GAAD,MAAY,CAClC0H,gBAAiB1H,EAAMrD,UAAUA,UACjC+L,eAAgB1I,EAAMrD,UAAUsM,kBAChCN,gBAAiB3I,EAAMrD,UAAUgM,gBACjChB,SAAU3H,EAAMrD,UAAUgL,SAC1BuB,aAAclJ,EAAMuD,cAAc2C,aAClCkC,YAAapI,EAAMuD,cAAcyC,cACjCsC,UAAWtI,EAAMuD,cAAc4F,cAC/BN,kBAAmB7I,EAAMuD,cAAc8E,YACvCpG,MAAOjC,EAAMmC,OAAOF,MACpBC,WAAYlC,EAAMmC,OAAOD,WACzBE,WAAYpC,EAAMmC,OAAOf,KACzBkB,YAAatC,EAAMmC,OAAOE,cAC1BK,2BAA4B1C,EAAMuD,cAAcC,cAChDZ,0BAA2B5C,EAAMuD,cAAcE,YAC/CX,4BAA6B9C,EAAMuD,cAAchG,UACjDsD,UAAWb,EAAMrD,UAAU+G,cAGF,SAACC,GAAD,MAAe,CACxCwE,SAAU,SAACI,EAAOrG,GAAR,OAAuByB,EZhInC,SAA6ByF,EAAUlH,GACrC,MAAO,CACLrG,KArE0B,wBAsE1BuN,WACAlH,cY4HwCmH,CAAoBd,EAAOrG,KACrEmG,YAAa,SAACpL,GAAD,OAAa0G,EAASzG,EAAcD,KACjDiL,qBAAsB,SAACvK,GAAD,OAAUgG,EZnHlC,SAAyChG,GACvC,MAAO,CACL9B,KAlFyC,uCAmFzC8B,QYgHuC2L,CAAgC3L,KACzE4L,mBAAoB,SAAC9L,GAAD,OAAUkG,EAAS3G,EAAYS,KACnD+L,wBAAyB,kBAAM7F,EAASxG,SAG3BiG,CAA6C0E,IAuB5DA,GAAU5J,aAAe,CACvByJ,SAAU,EACVD,gBAAiB,GACjB/J,KAAM,GACNwK,SAAUnE,IAAUrG,KACpB0K,YAAarE,IAAUrG,KACvBuK,qBAAsBlE,IAAUrG,KAChC2K,UAAWtE,IAAUrG,KACrB+K,eAAgB1E,IAAUyF,QAAQC,OAClCf,gBAAiB3E,IAAUyF,QAAQC,Q,wBC5O/BC,G,4JACJ,WACE,MAAkD/L,KAAKC,MAA/C+L,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,aACjC,OACE,6BACE,4BAAQrO,UAAU,eAChB,yBACEC,IAAMkO,EACN9N,cAAY,yBACZF,IAAI,iBAEN,0BACEE,cAAY,qBACZL,UAAU,sBAERoO,GAEJ,yBAAKpO,UAAU,uBACb,0BAAMA,UAAU,cAAhB,SAGA,0BACEA,UAAU,sBACVK,cAAY,gBAEVgO,KAKR,yBAAKrO,UAAU,iBACb,yBAAKC,IAAMqL,KAASnL,IAAI,GAAGH,UAAU,qB,GA/B1BM,aAgDNqH,gBAVS,SAACpD,GAAD,MAAY,CAClC4J,WAAY5J,EAAMmC,OAAOmB,eACzBuG,YAAa7J,EAAMmC,OAAOf,KAC1B0I,aAAc9J,EAAMmC,OAAOF,SAOdmB,CAAyBuG,ICrDxC,SAASI,GAAsBjG,GAY7B,OAXgBA,EAAagB,KAAI,SAACC,GAShC,OADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAKiF,QAAQ,WAAY,MACpBA,QAAQ,WAAY,KACpBA,QAAQ,aAAc,SACtBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,KAClBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,KACfA,QAAQ,MAAO,OAM/B,SAASC,GAAyBnG,GAehC,OAdcA,EAAagB,KAAI,SAACC,GAY9B,OAXgBA,EAAKD,KAAI,SAACoF,GASxB,OADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAQA,EAAMF,QAAQ,WAAY,MACpBA,QAAQ,WAAY,KACpBA,QAAQ,aAAc,SACtBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,KAClBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,KACfA,QAAQ,MAAO,UAQnC,SAASG,GAAgBrG,GAYvB,OAXkBA,EAAagB,KAAI,SAACC,GASlC,OARAA,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,WAAY,KAClDjF,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,WAAY,IAClDjF,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,aAAc,QACpDjF,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,UAAW,IACjDjF,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,SAAU,IAChDjF,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,OAAQ,IAC9CjF,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,MAAO,IAC7CjF,EAAK+D,SAAW/D,EAAK+D,SAASkB,QAAQ,MAAO,IACtCjF,K,ICdIqF,G,4JAzBb,WACE,OACE,yBAAK3O,UAAU,eACb,uBAAGA,UAAU,qBAAb,kJAGE,6BAHF,gEAMA,kBAAC,IAAD,CAAMH,GAAG,kBAAkBC,MAAQ,CAAEC,eAAgB,SACnD,yBAAKC,UAAU,mBACb,4BACEI,KAAK,SACLC,cAAY,cACZL,UAAU,2BAHZ,0B,GAZkBM,aCiBfsO,G,4JAhBb,WACE,OAEE,oCACE,yBAAK5O,UAAU,WAAf,wBAGA,yBAAKA,UAAU,mBACf,6BACA,kBAAC,GAAD,W,GAVcM,aCkBhBuO,G,kDACJ,WAAYzM,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,CACXuK,oBAAoB,EACpBC,kBAAkB,GAEpB,EAAKC,mBAAqB,EAAKA,mBAAmBnK,KAAxB,gBAC1B,EAAKoK,0BAA4B,EAAKA,0BAA0BpK,KAA/B,gBACjC,EAAKqK,gBAAkB,EAAKA,gBAAgBrK,KAArB,gBACvB,EAAKsK,yBAA2B,EAAKA,yBAAyBtK,KAA9B,gBATf,E,qDAYnB,WAAqB,IAAD,OAClB,EACqC1C,KAAKC,MADlCgN,EAAR,EAAQA,wBACNC,EADF,EACEA,+BACF,EAOI9H,KAAKyF,MAAM1F,aAAa/C,OAAOmC,OANjCf,EADF,EACEA,KACAiB,EAFF,EAEEA,cACO0I,EAHT,EAGExI,MACgBlF,EAJlB,EAIEoF,eACenF,EALjB,EAKEqF,cACiBpF,EANnB,EAMEsF,gBAEIN,EAAQwI,EACdD,EAA+BzN,EAAUC,EAASC,GAClDsN,EAAwBzJ,EAAMiB,EAAeE,GAC7C,IAAMJ,EAAS,CACbA,OAAQ,CACNf,OACAc,WAAY,EACZD,MAAO,EACPI,gBACAE,MAAOwI,EACPtI,eAAgBpF,EAChBsF,cAAerF,EACfuF,gBAAiBtF,IAIrBwF,aAAa/C,MAAQgD,KAAKC,UAAUd,GACpC6I,YAAW,WACT,EAAKL,oBAHM,O,oEAOf,oDAAAzO,EAAA,+DAOM0B,KAAKC,MALPU,EAFJ,EAEIA,MACAsF,EAHJ,EAGIA,iBAC4BxG,EAJhC,EAIIqF,2BAC2BpF,EAL/B,EAKIsF,0BAC8BlE,EANlC,EAMIuM,6BANJ,SAQiCzM,EAAaD,EAAOlB,EAAUC,EAASoB,GARxE,OAQQwM,EARR,OAUQpH,EAAe,GACrBoH,EAAiBrE,SAAQ,SAAC9B,GACxBjB,EAAaqH,KAAKpG,MAGdqG,EAAgB,GACtBF,EAAiBrE,SAAQ,SAAC9B,GACxBqG,EAAcD,KAAKpG,EAAKsG,sBAGpBC,EAAc,GACpBJ,EAAiBrE,SAAQ,SAAC9B,GACxBuG,EAAYH,KAAKpG,EAAKwG,mBAGlB5O,EAAYwN,GAAgBrG,GAC5B0H,EAAqBvB,GAAyBmB,GAC9CK,EAAmB1B,GAAsBuB,GAE/CzH,EAAiBlH,EAAW6O,EAAoBC,GAChD7N,KAAKqD,SAAS,CACZuJ,kBAAkB,IA/BtB,iD,4FAmCA,WAA4B,IAAD,OACjBkB,EAAuB9N,KAAKC,MAA5B6N,mBAERV,YAAW,WACLU,EAAmBjK,OAAS,IAE9BkK,EADwB,EAAK9N,MAArB8N,cACI,KAJA,O,gCASlB,WACE,MAKI/N,KAAKC,MAJP+N,EADF,EACEA,WAAYjE,EADd,EACcA,SAAUkE,EADxB,EACwBA,eAAgBC,EADxC,EACwCA,WACtCzD,EAFF,EAEEA,YAAa0D,EAFf,EAEeA,kBACbC,EAHF,EAGEA,eAAgBC,EAHlB,EAGkBA,iBAAkBzC,EAHpC,EAGoCA,wBAClC3I,EAJF,EAIEA,UAEFqG,KACAmB,GAAY,GACZuD,EAAWjE,EAAW,GACtBoE,IACAvC,IACAqC,EA1GW,IA2GXC,IACAlO,KAAK8M,4BAIL,GZlFF5L,GAAIK,MAAMO,OACVZ,GAAIS,MAAMG,OYgFJmB,GAAamL,EAFM,GAE2BlM,KAF3B,IAGnBkM,EAEF,OADAC,IAEErO,KAAKqD,SAAS,CACZsJ,oBAAoB,M,uCAM5B,WACE,IAAM5D,EAAQ7F,SAAS8F,iBAAiB,sBAClC/J,EAAUiE,SAASC,cAAc,oBACvC4F,EAAME,SAAQ,SAACC,GACbA,EAAQvL,MAAMwL,OAAS,MAEzBlK,EAAQtB,MAAMwL,OAAS,K,oBAGzB,WACE,MAAiDnJ,KAAKoC,MAA9CuK,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,iBACpB5K,EAAYhC,KAAKC,MAAjB+B,QACR,OAAI2K,EAA2B,kBAAC,IAAD,CAAUjP,GAAG,cAE1C,oCACGsC,KAAKgN,2BACN,kBAAC,GAAD,MACA,yBAAKnP,UAAU,kBAEXmE,GAAW4K,EAAmB,kBAAC,GAAD,CAC5B7M,KAAOC,KAAK6M,qBACT,kBAAC,GAAD,Y,GA7IE1O,aAoLJqH,gBA/BS,SAACpD,GAAD,MAAY,CAClC2H,SAAU3H,EAAMrD,UAAUgL,SAC1BmE,WAAY9L,EAAMuD,cAAc2I,eAChCC,cAAenM,EAAMuD,cAAc4F,cACnC4C,kBAAmB/L,EAAMuD,cAAc6I,mBACvClD,aAAclJ,EAAMuD,cAAc2C,aAClC8F,eAAgBhM,EAAMmC,OAAO0F,gBAC7BtJ,MAAOyB,EAAMmC,OAAO5D,MACpBmE,2BAA4B1C,EAAMuD,cAAcC,cAChDZ,0BAA2B5C,EAAMuD,cAAcE,YAC/CwH,6BAA8BjL,EAAMuD,cAAchG,UAClDqC,QAASI,EAAMrD,UAAUiD,QACzB8L,mBAAoB1L,EAAMrD,UAAUA,UACpCkE,UAAWb,EAAMrD,UAAU+G,cAGF,SAACC,GAAD,MAAe,CACxCiI,WAAY,SAACxC,GAAD,OAAczF,EjB/H5B,SAA4ByF,GAC1B,MAAO,CACLvN,KAzDyB,uBA0DzBuN,YiB4HiCiD,CAAmBjD,KACtDkD,aAAc,SAACrP,GAAD,OAAa0G,EAAS3G,EAAYC,KAChD4O,eAAgB,SAAC9O,GAAD,OAAgB4G,EAAS7G,EAAcC,KACvDsL,YAAa,SAACpL,GAAD,OAAa0G,EAASzG,EAAcD,KACjDuM,wBAAyB,kBAAM7F,EAASxG,MACxC8O,iBAAkB,kBAAOtI,EjBxFlB,CACL9H,KA7FF,mDiBqLAgI,iBAAkB,SAACqG,EAAOqC,EAAKC,GAAb,OAAuB7I,EAASjH,EAAcwN,EAAOqC,EAAKC,KAC5E3B,wBAAyB,SAACzJ,EAAME,EAAOyJ,GAAd,OACvBpH,EjB9EJ,SAAwCvC,EAAME,EAAOyJ,GACnD,MAAO,CACLlP,KAzGwC,sCA0GxCuF,OACAE,QACAyJ,OiByES0B,CAA+BrL,EAAME,EAAOyJ,KACvDD,+BAAgC,SAACzN,EAAUC,EAASC,GAApB,OAC9BoG,EAASvG,EAAwBC,EAAUC,EAASC,KACtDoO,YAAa,SAAClO,GAAD,OAAUkG,EAASnG,EAAwBC,QAG3C2F,CAA6CkH,IAyB5DA,GAAKpM,aAAe,CAClByJ,SAAU,EACVkE,eAAgB7H,IAAUrG,KAC1BmO,WAAY9H,IAAUrG,KACtB0K,YAAarE,IAAUrG,KACvBoO,kBAAmB/H,IAAUrG,KAC7BsO,iBAAkBjI,IAAUrG,KAC5BkG,iBAAkBG,IAAUrG,KAC5BkN,wBAAyB7G,IAAUrG,KACnC6L,wBAAyBxF,IAAUrG,KACnCmN,+BAAgC9G,IAAUrG,KAC1CgO,YAAa3H,IAAUrG,KACvBiC,SAAS,G,4CCpOL8M,G,kDACJ,WAAY7O,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,GAGb,EAAK2M,mBAAqB,EAAKA,mBAAmBrM,KAAxB,gBAC1B,EAAKsM,qBAAuB,EAAKA,qBAAqBtM,KAA1B,gBAC5B,EAAKuM,UAAY,EAAKA,UAAUvM,KAAf,gBACjB,EAAKwM,sBAAwB,EAAKA,sBAAsBxM,KAA3B,gBARZ,E,sDAWnB,WACE1C,KAAKgP,wBAEL/K,EADyBjE,KAAKC,MAAtBgE,eACK,K,kCAGf,WACE,MAAiCjE,KAAKC,MAChCkP,EAAc,CAClB3L,KAFF,EAAQA,KAGNa,MAHF,EAAcA,MAIZ+K,QAJF,EAAqBA,SAMrB,GAAKjK,aAAakK,SAA2C,IAAhClK,aAAakK,QAAQxL,OAE3C,CACL,IAAMyL,EAAsBlK,KAAKyF,MAAM1F,aAAakK,SACpDC,EAAoB/B,KAAK4B,GACzBhK,aAAakK,QAAUjK,KAAKC,UAAUiK,QAJtCnK,aAAakK,QAAUjK,KAAKC,UAAU,CAAC8J,M,mCAQ3C,YAEElL,EADyBjE,KAAKC,MAAtBgE,eACK,K,uBAIf,WACE,OACE,4BACEhG,KAAK,SACLC,cAAY,iBACZL,UAAU,0BACV4C,QAAUT,KAAKkP,uBAJjB,qB,oBAUJ,WACE,MAA6BlP,KAAKC,MAA1BoE,EAAR,EAAQA,MAAOkL,EAAf,EAAeA,UAEf,OACE,oCACE,kBAAC,GAAD,MACA,yBAAK1R,UAAU,iBAEb,wBAAIK,cAAY,gBAAgBL,UAAU,iBAA1C,aAGA,wBAAIK,cAAY,gBAAgBL,UAAU,4BACtC0R,EAViB,EAUgB,sBAAwB,eAE7D,wBACErR,cAAY,uBACZL,UAAU,eAERwG,GAEJ,wBACEnG,cAAY,0BACZL,UAAU,mBAER0R,EACF,4CAEF,kBAAC,IAAD,CAAM7R,GAAG,kBAAkBC,MAAQ,CAAEC,eAAgB,SACnD,yBAAKC,UAAU,kBACb,yBAAKC,IAAM2J,KAAOzJ,IAAI,SAASH,UAAU,aACvCmC,KAAKiP,cAGX,kBAAC,IAAD,CAAMvR,GAAG,WAAWC,MAAQ,CAAEC,eAAgB,SAC5C,yBAAKC,UAAU,mBACb,yBAAKC,IAAM0R,KAASxR,IAAI,UAAUH,UAAU,gBAC5C,4BACE4C,QAAUT,KAAK+O,mBACf9Q,KAAK,SACLC,cAAY,cACZL,UAAU,6BAJZ,uB,GAxFSM,aAmHRqH,gBAXS,SAACpD,GAAD,MAAY,CAClCgN,QAAShN,EAAMmC,OAAOmB,eACtBlC,KAAMpB,EAAMmC,OAAOf,KACnBa,MAAOjC,EAAMmC,OAAOF,MACpBkL,UAAWnN,EAAMmC,OAAOD,eAGC,SAACyB,GAAD,MAAe,CACxC9B,aAAc,SAACpE,GAAD,OAAUkG,EAASnG,EAAwBC,QAG5C2F,CAA6CsJ,IAU5DA,GAASxO,aAAe,CACtB2D,aAAcmC,IAAUrG,M,IC/HpB0P,G,kDACJ,WAAYxP,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,CACXsN,cAAc,GAEhB,EAAKC,cAAgB,EAAKA,cAAcjN,KAAnB,gBACrB,EAAKkN,qBAAuB,EAAKA,qBAAqBlN,KAA1B,gBANX,E,wDASnB,YAEEuB,EADyBjE,KAAKC,MAAtBgE,eACK,GACbjE,KAAKqD,SAAS,CACZqM,cAAc,M,2BAIlB,WAGE,OAFgBtK,KAAKyF,MAAM1F,aAAakK,SACVQ,MAAK,SAACvR,EAAGwR,GAAJ,OAAUA,EAAEzL,MAAQ/F,EAAE+F,SAEzC6C,KAAI,SAAC6I,EAAM3I,GAAP,OAChB,oCACE,yBAAKvJ,UAAU,iBAAiBwJ,IAAMD,GACpC,0BAAMvJ,UAAU,kBAAmBuJ,EAAQ,GAC3C,yBAAKtJ,IAAMiS,EAAKX,QAAUpR,IAAM+R,EAAKvM,OACrC,uBACEtF,cAAA,sBAA6BkJ,GAC7BvJ,UAAU,uBAERkS,EAAKvM,MAET,uBACEtF,cAAA,uBAA8BkJ,GAC9BvJ,UAAU,iBAERkS,EAAK1L,QAGX,mC,oBAMR,WAEE,OADyBrE,KAAKoC,MAAtBsN,aACiB,kBAAC,IAAD,CAAUhS,GAAG,oBAEpC,yBAAKG,UAAU,gBACb,yBAAKA,UAAU,kBACb,yBAAKC,IAAM0R,KAASxR,IAAI,UAAUH,UAAU,uBAC5C,wBAAIK,cAAY,gBAAgBL,UAAU,iBAA1C,YAEF,yBAAKA,UAAU,qBACXmC,KAAK2P,iBAET,yBAAK9R,UAAU,qBACb,yBAAKC,IAAM2J,KAAOzJ,IAAI,SAASH,UAAU,kBACzC,4BACEI,KAAK,SACLC,cAAY,cACZL,UAAU,0BACV4C,QAAUT,KAAK4P,sBAJjB,6B,GA5DYzR,aA8EPqH,eAAQ,MAJI,SAACO,GAAD,MAAe,CACxC9B,aAAc,SAACpE,GAAD,OAAUkG,EAASnG,EAAwBC,QAG5C2F,CAAkCiK,IAMjDA,GAAQnP,aAAe,CACrB2D,aAAcmC,IAAUrG,M,wBCLXiQ,G,kDAjFb,WAAY/P,GAAQ,IAAD,8BACjB,cAAMA,IACDgQ,cAAgB,EAAKA,cAAcvN,KAAnB,gBAFJ,E,iDAKnB,WACE,OACE,kBAAC,IAAD,CAAMhF,GAAG,kBAAkBC,MAAQ,CAAEC,eAAgB,SACnD,yBAAKC,UAAU,mBACb,yBAAKC,IAAM2J,KAAOzJ,IAAI,SAASH,UAAU,kBACzC,4BACEI,KAAK,SACLJ,UAAU,2BAFZ,uB,oBAWR,WACE,OACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,gBACb,yBAAKC,IAAMwH,IAAQtH,IAAI,GAAGH,UAAU,cACpC,wBAAIA,UAAU,eAAd,YACA,0BAAMA,UAAU,cAAhB,cAEF,8FACA,qFACA,yBAAKA,UAAU,eACb,yBAAKC,IAAMoS,KAASrS,UAAU,QAAQG,IAAI,KAC1C,wBAAIH,UAAU,cAAd,mBAEE,6BAFF,gBAIE,6BAJF,iBAME,6BANF,gBASA,yBAAKC,IAAMqS,KAAStS,UAAU,QAAQG,IAAI,MAE5C,uBAAGH,UAAU,qBAAb,gGAIA,uBAAGA,UAAU,qBAAb,2LAKA,uBAAGA,UAAU,qBAAb,6CAGA,uBAAGA,UAAU,qBAAb,8FAKA,uBAAGA,UAAU,qBAAb,iBAEE,6BAFF,wEAIE,6BAJF,oCAME,6BANF,4CAQE,6BARF,gCAWA,uBAAGA,UAAU,qBAAb,8CAGEmC,KAAKiQ,qB,GA5EK9R,aCGL,SAASiS,KACtB,OACE,yBAAKvS,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwS,OAAK,EAACC,KAAK,UAAS,kBAAC,GAAD,OAC3B,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAkBC,OAAS,kBAAM,kBAAC,GAAD,SACnD,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,QAAQC,OAAS,kBAAM,kBAAC,GAAD,SACzC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,OAAS,kBAAM,kBAAC,GAAD,SAC7C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWE,UAAYf,KACzC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,SAASE,UAAYR,O,gDCVzCS,GAAgB,CACpB1G,SAAU,EACVhL,UAAW,GACXsM,kBAAmB,GACnBN,gBAAiB,GACjB/I,SAAS,EACT8D,WAAW,GAsCE4K,OAnCf,WAAgD,IAAhCtO,EAA+B,uDAAvBqO,GAAeE,EAAQ,uCAC7C,OAAQA,EAAO1S,MACf,ItBnBqB,iBsBoBnB,OAAO,aAAC,gBACHmE,GADL,IAEErD,UAAU,aAAK4R,EAAO5R,WACtBsM,kBAAmBsF,EAAO3R,UAC1B+L,gBAAiB4F,EAAO1R,UAE5B,ItBtB2B,uBsBuBzB,OAAO,aAAC,gBACHmD,GADL,IAEE2H,SAAU4G,EAAOnF,WAErB,ItBpBA,gDsBqBE,OAAO,aAAC,gBACHpJ,GADL,IAEE2H,SAAU,IAEd,ItBrBgC,4BsBsB9B,OAAO,aAAC,gBACH3H,GADL,IAEEJ,QAAS2O,EAAO9Q,OAEpB,ItBzBwB,oBsB0BtB,OAAO,aAAC,gBACHuC,GADL,IAEE0D,UAAW6K,EAAO9Q,OAGtB,QACE,OAAOuC,ICvCLqO,GAAgB,CACpBjN,KAAM,GACNc,WAAY,EACZD,MAAO,EACPI,cAAe,GACfiB,eAAgB,GAChB/E,MAAO,GACPsJ,gBAAiB,GAgDJ1F,OA7Cf,WAAgD,IAAhCnC,EAA+B,uDAAvBqO,GAAeE,EAAQ,uCAC7C,OAAQA,EAAO1S,MACf,IvBtB4B,wBuBuB1B,OAAO,6BACFmE,GADL,IAEEsD,eAAgBiL,EAAO7S,IACvB0F,KAAMmN,EAAOnN,KACbiB,cAAekM,EAAOjN,MACtB/C,MAAOgQ,EAAOhQ,QAElB,IvBvB4B,wBuBwB1B,OAAO,6BACFyB,GADL,IAEEiC,MAAOjC,EAAMiC,MAAQsM,EAAOnF,SAC5BlH,WAAYqM,EAAOrM,aAEvB,IvB1B2B,uBuB2BzB,OAAO,6BACFlC,GADL,IAEE6H,gBAAiB7H,EAAM6H,gBAAkB,IAE7C,IvB7BA,gDuB8BE,OAAO,6BACF7H,GADL,IAEE6H,gBAAiB,IAErB,IvBjCyB,qBuBkCvB,OAAO,6BACF7H,GADL,IAEEiC,MAAOsM,EAAOtM,MACdC,WAAYqM,EAAOrM,aAEvB,IvBtC0C,sCuBuCxC,OAAO,6BACFlC,GADL,IAEEoB,KAAMmN,EAAOnN,KACbiB,cAAekM,EAAOjN,MACtBgC,eAAgBiL,EAAOxD,MAG3B,QACE,OAAO/K,ICnDLqO,GAAgB,CACpBrI,cAAe,GACfE,cAAc,EACdmC,aAAa,EACb7E,cAAe,GACfC,YAAa,GACblG,UAAW,IAoDEgG,OAjDf,WAAuD,IAAhCvD,EAA+B,uDAAvBqO,GAAeE,EAAQ,uCACpD,OAAQA,EAAO1S,MACf,IxBlBqB,iBwBmBnB,OAAO,6BACFmE,GADL,IAEEgG,cAAeuI,EAAOxR,aAG1B,IxBzB+B,2BwB0B7B,OAAO,6BACFiD,GADL,IAEEgG,cAAeuI,EAAOpI,OAG1B,IxB7BkC,sBwB8BhC,OAAO,6BACFnG,GADL,IAEEmJ,cAAeoF,EAAO7O,KACtBwM,eAAgBqC,EAAOhI,QAG3B,IxBlCmB,ewBmCjB,OAAO,6BACFvG,GADL,IAEEkG,aAAcqI,EAAOtR,UAEzB,IxBrCsB,kBwBsCpB,OAAO,6BACF+C,GADL,IAEEqI,YAAakG,EAAOtR,UAExB,IxBzC2C,uCwB0CzC,OAAO,6BACF+C,GADL,IAEEoM,mBAAoBmC,EAAO5Q,OAE/B,IxBxC0B,sBwByCxB,OAAO,6BACFqC,GADL,IAEEwD,cAAe+K,EAAOlR,SACtBoG,YAAa8K,EAAOjR,QACpBC,UAAWgR,EAAOhR,YAGtB,QACE,OAAOyC,ICrDIwO,GANMC,2BAAgB,CACnC9R,aACAwF,UACAoB,mBCEamL,GALDC,uBACZC,GACAC,+BAAoBC,2BAAgBC,QCCtCC,IAASb,OACP,kBAAC,IAAD,CAAUO,MAAQA,IAChB,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJ5N,SAASmO,eAAe,W","file":"static/js/main.28920656.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back_4.ec5c449f.png\";","module.exports = __webpack_public_path__ + \"static/media/gear.bad035b2.png\";","module.exports = __webpack_public_path__ + \"static/media/about.61586ca6.png\";","module.exports = __webpack_public_path__ + \"static/media/back_3.943b8a14.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy_1.b133f3ea.png\";","module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","module.exports = __webpack_public_path__ + \"static/media/ShowDoMilhaoTheme.2bb4c1b0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/certaResposta.8f1e336b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/proximaPergunta.99df652c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Errou.4ba5d393.mp3\";","module.exports = __webpack_public_path__ + \"static/media/quots_2.81fd41c1.png\";","module.exports = __webpack_public_path__ + \"static/media/quots_1.d696b7bd.png\";","module.exports = __webpack_public_path__ + \"static/media/header_base.c84b8e19.png\";","module.exports = __webpack_public_path__ + \"static/media/back_1.10a134b1.png\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport settingsIMG from '../images/gear.png';\r\n\r\nclass btnSetupScreen extends Component {\r\n  render() {\r\n    return (\r\n      <Link to=\"/Setup\" style={ { textDecoration: 'none' } }>\r\n        <div className=\"div-btn-settings\">\r\n          <div className=\"btn-div-img-settings\">\r\n            <img src={ settingsIMG } alt=\"Configurações\" className=\"btn-img-settings\" />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            data-testid=\"btn-settings\"\r\n            className=\"btn-neon-blue setup-btn\"\r\n          >\r\n            Configurações\r\n          </button>\r\n          {/* <button\r\n            type=\"button\"\r\n            data-testid=\"btn-settings\"\r\n            className=\"btn-settings btn-neon-red\"\r\n          >\r\n            Configurações\r\n          </button> */}\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default btnSetupScreen;\r\n","const ENDPOINT = 'https://www.gravatar.com/avatar/';\r\n\r\nasync function fetchGravatar(hash) {\r\n  try {\r\n    const response = await fetch(`${ENDPOINT}${hash}`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport default fetchGravatar;\r\n","const SEND_GRAVATAR_SRC_IMG = 'SEND_GRAVATAR_SRC_IMG';\r\nconst SEND_QUESTIONS = 'SEND_QUESTIONS';\r\nconst DECREASE_TIME_TO_RESPOND = 'DECREASE_TIME_TO_RESPOND';\r\nconst INITIATE_TIMER = 'INITIATE_TIMER';\r\nconst STOP_N_RESET_TIMER_FUNCTION = 'STOP_TIMER_FUNCTION';\r\nconst QUESTION_ID_INCREASE = 'QUESTION_ID_INCREASE';\r\nconst MODIFY_TIMER = 'MODIFY_TIMER';\r\nconst INCREASE_PLAYER_SCORE = 'INCREASE_PLAYER_SCORE';\r\nconst MODIFY_NEXT_BTN = 'MODIFY_NEXT_BTN';\r\nconst ALLOW_QUESTIONS_BTN_AFTER_NEXT_CLICK = 'ALLOW_QUESTIONS_BTN_AFTER_NEXT_CLICK';\r\nconst ADD_QUESTIONS_PLAYED = 'ADD_QUESTIONS_PLAYED';\r\nconst RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS = (\r\n  'RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS');\r\nconst RESET_STORE_SCORES = 'RESET_STORE_SCORES';\r\nconst RECOVER_NAME_AND_EMAIL_FROM_REFRESH = 'RECOVER_NAME_AND_EMAIL_FROM_REFRESH';\r\nconst SEND_CONFIG_OPTIONS = 'SEND_CONFIG_OPTIONS';\r\nconst MODIFY_PLAYING_TRUE_FALSE = 'MODIFY_PLAYING_TRUE_FALSE';\r\nconst MODIFY_PLAY_SOUND = 'MODIFY_PLAY_SOUND';\r\n\r\nfunction sendGravatarSrcImg(name, src, email, token) {\r\n  return {\r\n    type: SEND_GRAVATAR_SRC_IMG,\r\n    name,\r\n    src,\r\n    email,\r\n    token,\r\n  };\r\n}\r\n\r\nfunction sendQuestions(questions, incorrect, correct) {\r\n  return {\r\n    type: SEND_QUESTIONS,\r\n    questions,\r\n    incorrect,\r\n    correct,\r\n  };\r\n}\r\n\r\nfunction decreaseTimeToRespond(time) {\r\n  return {\r\n    type: DECREASE_TIME_TO_RESPOND,\r\n    time,\r\n  };\r\n}\r\n\r\nfunction InitiateTimer(startTimer) {\r\n  return {\r\n    type: INITIATE_TIMER,\r\n    startTimer,\r\n  };\r\n}\r\n\r\nfunction stopAndResetFunction(stop, reset) {\r\n  return {\r\n    type: STOP_N_RESET_TIMER_FUNCTION,\r\n    stop,\r\n    reset,\r\n  };\r\n}\r\n\r\nfunction questionIdIncrease(increase) {\r\n  return {\r\n    type: QUESTION_ID_INCREASE,\r\n    increase,\r\n  };\r\n}\r\n\r\nfunction modifyTimer(boolean) {\r\n  return {\r\n    type: MODIFY_TIMER,\r\n    boolean,\r\n  };\r\n}\r\n\r\nfunction increasePlayerScore(increase, assertions) {\r\n  return {\r\n    type: INCREASE_PLAYER_SCORE,\r\n    increase,\r\n    assertions,\r\n  };\r\n}\r\n\r\nfunction modifyNextBtn(boolean) {\r\n  return {\r\n    type: MODIFY_NEXT_BTN,\r\n    boolean,\r\n  };\r\n}\r\n\r\nfunction allowQuestionsBtnAfterNextClick(func) {\r\n  return {\r\n    type: ALLOW_QUESTIONS_BTN_AFTER_NEXT_CLICK,\r\n    func,\r\n  };\r\n}\r\n\r\nfunction addQuestionsPlayed(questions) {\r\n  return {\r\n    type: ADD_QUESTIONS_PLAYED,\r\n    questions,\r\n  };\r\n}\r\n\r\nfunction resetTriviaQuestionsIdAndPlayedQuestions() {\r\n  return {\r\n    type: RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS,\r\n  };\r\n}\r\n\r\nfunction resetStoreScores(score, assertions) {\r\n  return {\r\n    type: RESET_STORE_SCORES,\r\n    score,\r\n    assertions,\r\n  };\r\n}\r\n\r\nfunction recoverNameAndEmailFromRefresh(name, email, img) {\r\n  return {\r\n    type: RECOVER_NAME_AND_EMAIL_FROM_REFRESH,\r\n    name,\r\n    email,\r\n    img,\r\n  };\r\n}\r\n\r\nfunction sendConfigOptionsAction(category, answear, dificulty) {\r\n  return {\r\n    type: SEND_CONFIG_OPTIONS,\r\n    category,\r\n    answear,\r\n    dificulty,\r\n  };\r\n}\r\n\r\nfunction modifyPlayingTruOrFalse(bool) {\r\n  return {\r\n    type: MODIFY_PLAYING_TRUE_FALSE,\r\n    bool,\r\n  };\r\n}\r\n\r\nfunction modifyPlaySound(bool) {\r\n  return {\r\n    type: MODIFY_PLAY_SOUND,\r\n    bool,\r\n  };\r\n}\r\n\r\nexport {\r\n  SEND_GRAVATAR_SRC_IMG,\r\n  sendGravatarSrcImg,\r\n  SEND_QUESTIONS,\r\n  sendQuestions,\r\n  decreaseTimeToRespond,\r\n  DECREASE_TIME_TO_RESPOND,\r\n  InitiateTimer,\r\n  INITIATE_TIMER,\r\n  stopAndResetFunction,\r\n  STOP_N_RESET_TIMER_FUNCTION,\r\n  QUESTION_ID_INCREASE,\r\n  questionIdIncrease,\r\n  modifyTimer,\r\n  MODIFY_TIMER,\r\n  INCREASE_PLAYER_SCORE,\r\n  increasePlayerScore,\r\n  modifyNextBtn,\r\n  MODIFY_NEXT_BTN,\r\n  allowQuestionsBtnAfterNextClick,\r\n  ALLOW_QUESTIONS_BTN_AFTER_NEXT_CLICK,\r\n  ADD_QUESTIONS_PLAYED,\r\n  addQuestionsPlayed,\r\n  resetTriviaQuestionsIdAndPlayedQuestions,\r\n  RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS,\r\n  RESET_STORE_SCORES,\r\n  resetStoreScores,\r\n  RECOVER_NAME_AND_EMAIL_FROM_REFRESH,\r\n  recoverNameAndEmailFromRefresh,\r\n  sendConfigOptionsAction,\r\n  SEND_CONFIG_OPTIONS,\r\n  modifyPlayingTruOrFalse,\r\n  MODIFY_PLAYING_TRUE_FALSE,\r\n  modifyPlaySound,\r\n  MODIFY_PLAY_SOUND,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputName extends Component {\r\n  render() {\r\n    const { func } = this.props;\r\n    return (\r\n      <label htmlFor=\"inputName\" className=\"inputName\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"inputName\"\r\n          data-testid=\"input-player-name\"\r\n          onChange={ func }\r\n          placeholder=\"Nome\"\r\n          className=\"inputNeon-blue\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputName;\r\n\r\nInputName.propTypes = {\r\n  func: PropTypes.func,\r\n};\r\n\r\nInputName.defaultProps = {\r\n  func: {},\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputEmail extends Component {\r\n  render() {\r\n    const { func } = this.props;\r\n    return (\r\n      <label htmlFor=\"inputEmail\" className=\"inputEmail\">\r\n        <input\r\n          type=\"email\"\r\n          id=\"inputEmail\"\r\n          data-testid=\"input-gravatar-email\"\r\n          onChange={ func }\r\n          placeholder=\"Email\"\r\n          className=\"inputNeon-blue\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputEmail;\r\n\r\nInputEmail.propTypes = {\r\n  func: PropTypes.func,\r\n};\r\n\r\nInputEmail.defaultProps = {\r\n  func: {},\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PlayBtn extends Component {\r\n  render() {\r\n    const { func } = this.props;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"btn-play\"\r\n        id=\"play-btn\"\r\n        onClick={ func }\r\n        className=\"btn-neon-red\"\r\n      >\r\n        Jogar\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayBtn;\r\n\r\nPlayBtn.propTypes = {\r\n  func: PropTypes.func,\r\n};\r\n\r\nPlayBtn.defaultProps = {\r\n  func: {},\r\n};\r\n","const ENDPOINT = 'https://opentdb.com/api_token.php?command=request';\r\nconst QUESTION_ENDPOINT = 'https://opentdb.com/api.php?amount=5';\r\n\r\nasync function getToken() {\r\n  try {\r\n    const response = await fetch(ENDPOINT);\r\n    const data = await response.json();\r\n    return data.token;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nasync function getQuestions(receiveToken, category, answear, difficulty) {\r\n  let URL = '';\r\n\r\n  if (category && answear && difficulty) {\r\n    URL = `&category=${Number(category)}&difficulty=${difficulty}&type=${answear}&token=`;\r\n  } else if (category) {\r\n    URL = `&category=${Number(category)}&token=`;\r\n  } else if (difficulty) {\r\n    URL = `&difficulty=${difficulty}&token=`;\r\n  } else if (answear) {\r\n    URL = `&type=${answear}&token=`;\r\n  } else {\r\n    URL = '&token=';\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${QUESTION_ENDPOINT}${URL}${receiveToken}`);\r\n    const questions = await response.json();\r\n    return questions.results;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport {\r\n  getToken,\r\n  getQuestions,\r\n};\r\n","import { Howl } from 'howler';\nimport mainTheme from '../sounds/ShowDoMilhaoTheme.mp3';\nimport Certa from '../sounds/certaResposta.mp3';\nimport Proxima from '../sounds/proximaPergunta.mp3';\nimport Errou from '../sounds/Errou.mp3';\n\nconst sfx = {\n  main: new Howl({\n    src: [mainTheme],\n    volume: 0.08,\n  }),\n  certa: new Howl({\n    src: [Certa],\n  }),\n  proxima: new Howl({\n    src: [Proxima],\n  }),\n  errou: new Howl({\n    src: [Errou],\n  }),\n};\n\nfunction stopMain() {\n  sfx.main.stop();\n}\n\nfunction playMain() {\n  if (!sfx.main.playing()) {\n    sfx.main.play();\n  }\n}\n//\nfunction playProxima() {\n  sfx.proxima.play();\n}\n\nfunction stopProxima() {\n  sfx.certa.stop();\n}\n\nfunction playCerta() {\n  sfx.certa.play();\n}\n\nfunction playErrou() {\n  sfx.errou.play();\n}\n\nfunction stopCertaErrouSound() {\n  sfx.certa.stop();\n  sfx.errou.stop();\n}\n\nexport {\n  playMain,\n  stopMain,\n  playProxima,\n  playCerta,\n  stopProxima,\n  playErrou,\n  stopCertaErrouSound,\n};\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport md5 from 'crypto-js/md5';\r\nimport logo from '../trivia.png';\r\nimport BtnSetupScreen from '../components/btnSetupScreen';\r\nimport fetchGravatar from '../services/GravatarApi';\r\nimport { sendGravatarSrcImg, sendQuestions, resetStoreScores, modifyPlayingTruOrFalse,\r\n} from '../redux/actions/index';\r\nimport InputName from '../components/InputName';\r\nimport InputEmail from '../components/InputEmail';\r\nimport PlayBtn from '../components/PlayBtn';\r\nimport about from '../images/about.png';\r\nimport { getToken } from '../services/TriviaApi';\r\nimport { playMain, stopMain } from '../components/SoundControl';\r\nimport '../App.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputEmail: '',\r\n      showImg: false,\r\n      token: '',\r\n      redirect: false,\r\n      redirectToAbout: false,\r\n    };\r\n    this.handleOnChangeInputValidate = this.handleOnChangeInputValidate.bind(this);\r\n    this.playHandle = this.playHandle.bind(this);\r\n    this.showProfileImg = this.showProfileImg.bind(this);\r\n    this.localStorageSave = this.localStorageSave.bind(this);\r\n    this.receiveToken = this.receiveToken.bind(this);\r\n    this.resetStoreInfos = this.resetStoreInfos.bind(this);\r\n    this.aboutBtn = this.aboutBtn.bind(this);\r\n    this.aboutBtnClickHandler = this.aboutBtnClickHandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { soundTrue } = this.props;\r\n    if (soundTrue) playMain();\r\n    this.receiveToken();\r\n    this.resetStoreInfos();\r\n    const button = document.querySelector('#play-btn');\r\n    button.disabled = true;\r\n  }\r\n\r\n  async receiveToken() {\r\n    const response = await getToken();\r\n    this.setState({\r\n      token: response,\r\n    });\r\n  }\r\n\r\n  resetStoreInfos() {\r\n    const { resetStorePoints } = this.props;\r\n    const ZERO = 0;\r\n    resetStorePoints(ZERO, ZERO);\r\n  }\r\n\r\n  handleOnChangeInputValidate(e) {\r\n    const name = document.querySelector('#inputName');\r\n    const button = document.querySelector('#play-btn');\r\n    const email = document.querySelector('#inputEmail');\r\n\r\n    if (email.checkValidity() && email.value.length >= 1 && name.value.length >= 1) {\r\n      button.disabled = false;\r\n    } else if (\r\n      !email.checkValidity()\r\n      || name.value.length < 1\r\n      || email.value.length < 1) {\r\n      button.disabled = true;\r\n    }\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  }\r\n\r\n  async playHandle() {\r\n    const { inputEmail, inputName, token } = this.state;\r\n    const { sendImgSrc, playingfalse } = this.props;\r\n\r\n    const hash = md5(inputEmail).toString();\r\n    await fetchGravatar(hash);\r\n    this.setState({\r\n      showImg: true,\r\n      imgHash: hash,\r\n    });\r\n    const src = `https://www.gravatar.com/avatar/${hash}.jpg`;\r\n    sendImgSrc(inputName, src, inputEmail, token);\r\n    this.localStorageSave();\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n    stopMain();\r\n    playingfalse(false);\r\n  }\r\n\r\n  localStorageSave() {\r\n    const { token } = this.state;\r\n    const { score,\r\n      assertions,\r\n      playerName,\r\n      playerEmail,\r\n      playerPhoto,\r\n      getCategoryConfigFromStore, getAnswearConfigFromStore, getDificultyConfigFromStore,\r\n    } = this.props;\r\n    const player = {\r\n      player: {\r\n        name: playerName,\r\n        assertions,\r\n        score,\r\n        gravatarEmail: playerEmail,\r\n        photo: playerPhoto,\r\n        categoryConfig: getCategoryConfigFromStore,\r\n        answearConfig: getAnswearConfigFromStore,\r\n        dificultyConfig: getDificultyConfigFromStore,\r\n      },\r\n    };\r\n    localStorage.state = JSON.stringify(player);\r\n    localStorage.token = JSON.stringify(token);\r\n  }\r\n\r\n  showProfileImg() {\r\n    const { imgHash } = this.state;\r\n    return (\r\n      <img alt=\"profile img\" src={ `https://www.gravatar.com/avatar/${imgHash}.jpg` } />\r\n    );\r\n  }\r\n\r\n  aboutBtn() {\r\n    return (\r\n      <div className=\"div-btn-about\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-neon-red btn-about\"\r\n          onClick={ this.aboutBtnClickHandler }\r\n        >\r\n          Sobre\r\n        </button>\r\n        <div className=\"div-btn-img-about\">\r\n          <img src={ about } alt=\"sobre\" className=\"btn-about-img\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  aboutBtnClickHandler() {\r\n    this.setState({\r\n      redirectToAbout: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { showImg, redirect, redirectToAbout } = this.state;\r\n\r\n    if (redirect) return <Redirect to=\"/game\" />;\r\n    if (redirectToAbout) return <Redirect to=\"/about\" />;\r\n\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\r\n          <section className=\"login-container\">\r\n            <form className=\"login-form neon-border-purple\">\r\n              <InputName func={ this.handleOnChangeInputValidate } />\r\n              <InputEmail func={ this.handleOnChangeInputValidate } />\r\n              <PlayBtn func={ this.playHandle } />\r\n            </form>\r\n            <BtnSetupScreen />\r\n            <this.aboutBtn />\r\n            { showImg ? this.showProfileImg() : '' }\r\n          </section>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  playerToken: state.player.token,\r\n  playerName: state.player.name,\r\n  playerEmail: state.player.gravatarEmail,\r\n  assertions: state.player.assertions,\r\n  score: state.player.score,\r\n  playerPhoto: state.player.srcGravatarImg,\r\n  getCategoryConfigFromStore: state.gameMechanics.categoryValue,\r\n  getAnswearConfigFromStore: state.gameMechanics.answearType,\r\n  getDificultyConfigFromStore: state.gameMechanics.dificulty,\r\n  soundTrue: state.questions.playSound,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sendImgSrc: (inputName, src, inputEmail, token) => (\r\n    dispatch(sendGravatarSrcImg(inputName, src, inputEmail, token))),\r\n  sendQuestionList: (questionList) => dispatch(sendQuestions(questionList)),\r\n  resetStorePoints: (score, assertions) => dispatch(resetStoreScores(score, assertions)),\r\n  playingfalse: (bool) => dispatch(modifyPlayingTruOrFalse(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\nLogin.propTypes = {\r\n  sendImgSrc: PropTypes.func,\r\n  resetStorePoints: PropTypes.func,\r\n  score: PropTypes.number.isRequired,\r\n  assertions: PropTypes.number.isRequired,\r\n  playerName: PropTypes.string.isRequired,\r\n  playerEmail: PropTypes.string.isRequired,\r\n  playerPhoto: PropTypes.string.isRequired,\r\n  getCategoryConfigFromStore: PropTypes.string.isRequired,\r\n  getAnswearConfigFromStore: PropTypes.string.isRequired,\r\n  getDificultyConfigFromStore: PropTypes.string.isRequired,\r\n  soundTrue: PropTypes.bool.isRequired,\r\n  playingfalse: PropTypes.func,\r\n};\r\n// -\r\nLogin.defaultProps = {\r\n  sendImgSrc: {},\r\n  resetStorePoints: PropTypes.func,\r\n  playingfalse: PropTypes.func,\r\n};\r\n","const CategoryOptions = [\n  {\n    category: 'Aleatória',\n    value: '',\n  },\n  {\n    category: 'Conhecimentos Gerais',\n    value: 9,\n  },\n  {\n    category: 'Entretenimento: Livros',\n    value: 10,\n  },\n  {\n    category: 'Entretenimento: Filmes',\n    value: 11,\n  },\n  {\n    category: 'Entretenimento: Música',\n    value: 12,\n  },\n  {\n    category: 'Entretenimento: Musicais&Teatro',\n    value: 13,\n  },\n  {\n    category: 'Entretenimento: Televisão',\n    value: 14,\n  },\n  {\n    category: 'Entretenimento: VideoGame',\n    value: 15,\n  },\n  {\n    category: 'Entretenimento: Jogos de Tabuleiro',\n    value: 16,\n  },\n  {\n    category: 'Entretenimento: Anime Japonês & Mangás',\n    value: 31,\n  },\n  {\n    category: 'Entretenimento: Cartoon & Animação',\n    value: 32,\n  },\n  {\n    category: 'Entretenimento: Quadrinhos',\n    value: 29,\n  },\n  {\n    category: 'Ciência e Natureza',\n    value: 17,\n  },\n  {\n    category: 'Ciência: Computadores',\n    value: 18,\n  },\n  {\n    category: 'Ciência: Matemática',\n    value: 19,\n  },\n  {\n    category: 'Ciência: Gadgets/Técnologia',\n    value: 30,\n  },\n  {\n    category: 'Mitologia',\n    value: 20,\n  },\n  {\n    category: 'Esportes',\n    value: 21,\n  },\n  {\n    category: 'Geografia',\n    value: 22,\n  },\n  {\n    category: 'História',\n    value: 23,\n  },\n  {\n    category: 'Política',\n    value: 24,\n  },\n  {\n    category: 'Arte',\n    value: 25,\n  },\n  {\n    category: 'Celebridades',\n    value: 26,\n  },\n  {\n    category: 'Reino Animal',\n    value: 27,\n  },\n  {\n    category: 'Veículos',\n    value: 28,\n  },\n];\n\nexport default CategoryOptions;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { GiSoundOn, GiSoundOff } from 'react-icons/gi';\r\nimport setup from '../images/gear.png';\r\nimport back from '../images/back_4.png';\r\nimport '../App.css';\r\nimport CategoryOptions from '../components/CategoryOptions';\r\nimport { sendConfigOptionsAction, modifyPlaySound } from '../redux/actions';\r\nimport { stopMain, playMain } from '../components/SoundControl';\r\n// import '../css/btnSetupScreen.css';\r\n\r\nclass Setup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categoryConfig: '',\r\n      answearConfig: '',\r\n      dificultyConfig: '',\r\n      appliedConfig: false,\r\n    };\r\n    this.dificultyRender = this.dificultyRender.bind(this);\r\n    this.confirmBtnRender = this.confirmBtnRender.bind(this);\r\n    this.confirmBtnClickHandler = this.confirmBtnClickHandler.bind(this);\r\n    this.answearTypeRender = this.answearTypeRender.bind(this);\r\n    this.categoryTypeRender = this.categoryTypeRender.bind(this);\r\n    this.selectChangeHandler = this.selectChangeHandler.bind(this);\r\n    this.SoundClickHandler = this.SoundClickHandler.bind(this);\r\n    this.soundBtnRender = this.soundBtnRender.bind(this);\r\n  }\r\n\r\n  SoundClickHandler() {\r\n    const { allowSound, soundTrue } = this.props;\r\n    if (soundTrue) {\r\n      stopMain();\r\n      return allowSound(false);\r\n    }\r\n    allowSound(true);\r\n    playMain();\r\n  }\r\n\r\n  soundBtnRender() {\r\n    const { soundTrue } = this.props;\r\n    return (\r\n      soundTrue ? (\r\n        <GiSoundOn\r\n          className=\"sound-btn\"\r\n          size=\"3em\"\r\n          onClick={ this.SoundClickHandler }\r\n        />)\r\n        : (\r\n          <GiSoundOff\r\n            className=\"sound-btn\"\r\n            size=\"3em\"\r\n            onClick={ this.SoundClickHandler }\r\n          />)\r\n    );\r\n  }\r\n\r\n  categoryTypeRender() {\r\n    return (\r\n      CategoryOptions\r\n        .map((item, index) => (\r\n          <option key={ index } value={ item.value }>{item.category}</option>\r\n        ))\r\n    );\r\n  }\r\n\r\n  answearTypeRender() {\r\n    const { answearConfig } = this.state;\r\n    return (\r\n      <select\r\n        id=\"answearConfig\"\r\n        value={ answearConfig }\r\n        onChange={ this.selectChangeHandler }\r\n        className=\"setup-btn-neon-red\"\r\n      >\r\n        <option value=\"\">Aleatória</option>\r\n        <option value=\"multiple\">Multipla escolha</option>\r\n        <option value=\"boolean\">Verdadeiro/Falso</option>\r\n      </select>\r\n    );\r\n  }\r\n\r\n  dificultyRender() {\r\n    const { dificultyConfig } = this.state;\r\n    return (\r\n      <select\r\n        id=\"dificultyConfig\"\r\n        value={ dificultyConfig }\r\n        onChange={ this.selectChangeHandler }\r\n        className=\"setup-btn-neon-red\"\r\n      >\r\n        <option value=\"\">Aleatória</option>\r\n        <option value=\"easy\">Fácil</option>\r\n        <option value=\"medium\">Médio</option>\r\n        <option value=\"hard\">Hard</option>\r\n      </select>\r\n    );\r\n  }\r\n\r\n  confirmBtnClickHandler() {\r\n    const {\r\n      categoryConfig: category,\r\n      answearConfig: answear,\r\n      dificultyConfig: dificulty } = this.state;\r\n    const { sendConfigToStore } = this.props;\r\n    sendConfigToStore(category, answear, dificulty);\r\n    this.setState({\r\n      appliedConfig: true,\r\n    });\r\n  }\r\n\r\n  selectChangeHandler(e) {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n      appliedConfig: false,\r\n    });\r\n  }\r\n\r\n  confirmBtnRender() {\r\n    const { appliedConfig } = this.state;\r\n    return (\r\n\r\n      <div className=\"setup-back-home2\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-neon-green back-home\"\r\n          onClick={ this.confirmBtnClickHandler }\r\n        >\r\n          Aplicar Configurações\r\n        </button>\r\n        { appliedConfig\r\n          ? (\r\n            <h2\r\n              style={ { color: 'green' } }\r\n            >\r\n              Configurações Aplicadas!\r\n            </h2>\r\n          )\r\n          : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { categoryConfig } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"header-setup\">\r\n          <img src={ setup } alt=\"Ranking\" className=\"setup-img-gear\" />\r\n          <h2 data-testid=\"settings-title\" className=\"title-setup\">Configurações</h2>\r\n        </div>\r\n        <div className=\"options-container\">\r\n          <div className=\"options-setup-container\">\r\n            <label htmlFor=\"dificultyConfig\">\r\n              Dificuldade:\r\n              {this.dificultyRender()}\r\n            </label>\r\n            <label htmlFor=\"answearConfig\">\r\n              Tipo de resposta:\r\n              {this.answearTypeRender()}\r\n            </label>\r\n            <label htmlFor=\"categoryConfig\">\r\n              Categoria:\r\n              <select\r\n                id=\"categoryConfig\"\r\n                value={ categoryConfig }\r\n                onChange={ this.selectChangeHandler }\r\n                className=\"setup-btn-neon-red\"\r\n              >\r\n                {this.categoryTypeRender()}\r\n              </select>\r\n            </label>\r\n            { this.soundBtnRender() }\r\n            {'Ativar/Desativar Som'}\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {this.confirmBtnRender()}\r\n        <br />\r\n        <Link to=\"/Trivia_Project\" style={ { textDecoration: 'none' } }>\r\n          <div className=\"setup-back-home\">\r\n            <img src={ back } alt=\"Voltar\" className=\"back-img-home\" />\r\n            <button\r\n              type=\"button\"\r\n              data-testid=\"btn-go-home\"\r\n              className=\"btn-neon-blue back-home\"\r\n            >\r\n              Voltar ao login\r\n            </button>\r\n          </div>\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  soundTrue: state.questions.playSound,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sendConfigToStore: (category, answear, dificulty) => (\r\n    dispatch(sendConfigOptionsAction(category, answear, dificulty))),\r\n  allowSound: (bool) => dispatch(modifyPlaySound(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Setup);\r\n\r\nSetup.propTypes = {\r\n  sendConfigToStore: PropTypes.func,\r\n  allowSound: PropTypes.func,\r\n  soundTrue: PropTypes.bool.isRequired,\r\n};\r\n\r\nSetup.defaultProps = {\r\n  sendConfigToStore: PropTypes.func,\r\n  allowSound: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  decreaseTimeToRespond, InitiateTimer, stopAndResetFunction,\r\n} from '../redux/actions';\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tick = this.tick.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.ResetTimer = this.ResetTimer.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { SendStopAndResetFunc } = this.props;\r\n    SendStopAndResetFunc(this.stop, this.ResetTimer);\r\n    const MIL = 1000;\r\n    this.clock = setInterval(() => this.tick(), MIL);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.clock);\r\n  }\r\n\r\n  ResetTimer() {\r\n    const MIL = 1000;\r\n    this.clock = setInterval(() => this.tick(), MIL);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.clock);\r\n  }\r\n\r\n  tick() {\r\n    const { sendCurrentTime, globalTime } = this.props;\r\n    sendCurrentTime(globalTime - 1);\r\n  }\r\n\r\n  render() {\r\n    const { globalTime } = this.props;\r\n    const ZERO = 0;\r\n    const DEZ = 10;\r\n    const TRINTA = 30;\r\n\r\n    if (globalTime <= ZERO) this.stop();\r\n    if (globalTime && globalTime < TRINTA) {\r\n      (document.querySelector('.timer-span-text').style.color = 'rgb(255, 250, 187)');\r\n    }\r\n    if (globalTime && globalTime <= DEZ) {\r\n      const text = document.querySelector('.timer-span-text');\r\n      text.style.color = 'rgb(255, 187, 187)';\r\n    }\r\n    return (\r\n      <div>\r\n        <h5 className=\"timer-text\">\r\n          Tempo para resposta:\r\n          <span className=\"timer-value neonText timer-span-text\">{` ${globalTime}`}</span>\r\n        </h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sendCurrentTime: (time) => dispatch(decreaseTimeToRespond(time)),\r\n  startGlobalTimer: (startTimer) => dispatch(InitiateTimer(startTimer)),\r\n  SendStopAndResetFunc: (func, func2) => dispatch(stopAndResetFunction(func, func2)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  globalTime: state.gameMechanics.timeToRespond,\r\n  running: state.gameMechanics.timerRunning,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n\r\nTimer.propTypes = {\r\n  sendCurrentTime: PropTypes.func,\r\n\r\n  SendStopAndResetFunc: PropTypes.func,\r\n  globalTime: PropTypes.number,\r\n\r\n};\r\n\r\nTimer.defaultProps = {\r\n  SendStopAndResetFunc: {},\r\n  sendCurrentTime: {},\r\n  globalTime: 30,\r\n};\r\n","const INCORRECT = '#incorrect-answear';\nconst CORRECT = '#correct-answear';\n\nfunction changeBorderColor() {\n  const wrong = document.querySelectorAll(INCORRECT);\n  const correct = document.querySelector(CORRECT);\n  wrong.forEach((element) => {\n    element.style.border = '3px solid rgb(255, 0, 0)';\n  });\n  correct.style.border = '3px solid rgb(6, 240, 15)';\n}\n\nfunction disableBtnsAfterTimer() {\n  const wrong = document.querySelectorAll(INCORRECT);\n  const correct = document.querySelector(CORRECT);\n  wrong.forEach((element) => {\n    element.disabled = true;\n  });\n  correct.disabled = true;\n}\n\nfunction allowAbleBtnsAfterNextClick() {\n  const wrong = document.querySelectorAll(INCORRECT);\n  const correct = document.querySelector(CORRECT);\n  wrong.forEach((element) => {\n    element.disabled = false;\n  });\n  correct.disabled = false;\n}\n\nfunction randomizeCorrectQuestion() {\n  const numberOfQuestions = document.querySelectorAll('.inputNeon-purple');\n  if (numberOfQuestions.length === 2) {\n    const questArray = ['a', 'b'];\n    const two = 2;\n    const randomNumberZeroToTwo = Math.floor(Math.random() * (two));\n    const question = document.querySelector('.correct-question');\n    question.style.gridArea = questArray[randomNumberZeroToTwo];\n    console.log('randomizei perguntas verdadeiro ou falso');\n    return;\n  }\n  const questArray = ['a', 'b', 'c', 'd'];\n  const four = 4;\n  const randomNumberZeroToThree = Math.floor(Math.random() * (four));\n  const question = document.querySelector('.correct-question');\n  question.style.gridArea = questArray[randomNumberZeroToThree];\n  console.log('randomizei perguntas multipla escolha');\n}\n\nexport {\n  changeBorderColor,\n  disableBtnsAfterTimer,\n  allowAbleBtnsAfterNextClick,\n  randomizeCorrectQuestion,\n};\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass QuestionPainel extends Component {\r\n  render() {\r\n    const { triviaQuestions, idTrivia, questionNumber } = this.props;\r\n    const { difficulty } = triviaQuestions[idTrivia];\r\n    return (\r\n      <div className=\"question-panel\">\r\n        <span>\r\n          {`Questão: ${Number(questionNumber)}/5 | `}\r\n        </span>\r\n        <span>\r\n          {`Dificulty: \r\n          ${difficulty}`}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  triviaQuestions: state.questions.questions,\r\n  idTrivia: state.questions.idTrivia,\r\n  questionNumber: state.player.questionsPlayed,\r\n});\r\n\r\nexport default connect(mapStateToProps)(QuestionPainel);\r\n\r\nQuestionPainel.propTypes = ({\r\n  triviaQuestions: PropTypes.arrayOf(Object),\r\n  idTrivia: PropTypes.number,\r\n  questionNumber: PropTypes.number,\r\n});\r\n\r\nQuestionPainel.defaultProps = {\r\n  idTrivia: 0,\r\n  triviaQuestions: [],\r\n  questionNumber: 1,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Timer from './Timer';\r\nimport { increasePlayerScore, modifyNextBtn,\r\n  allowQuestionsBtnAfterNextClick, modifyTimer, addQuestionsPlayed,\r\n} from '../redux/actions';\r\nimport quot1 from '../images/quots_2.png';\r\nimport quot2 from '../images/quots_1.png';\r\nimport {\r\n  changeBorderColor,\r\n  disableBtnsAfterTimer,\r\n  allowAbleBtnsAfterNextClick,\r\n  randomizeCorrectQuestion } from '../helpers/FunctionsHelpers';\r\nimport { playProxima, playCerta, playErrou } from './SoundControl';\r\nimport QuestionPainel from './QuestionPainel';\r\n\r\nclass Questions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.generateQuestionsBtnFunc = this.generateQuestionsBtnFunc.bind(this);\r\n    this.manageCorrectAnswear = this.manageCorrectAnswear.bind(this);\r\n    this.localStorageNewSave = this.localStorageNewSave.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    randomizeCorrectQuestion();\r\n    const { sendAbleQuestBtnFunc, soundTrue } = this.props;\r\n    if (soundTrue) playProxima();\r\n    sendAbleQuestBtnFunc(allowAbleBtnsAfterNextClick);\r\n  }\r\n\r\n  manageCorrectAnswear() {\r\n    const { addPoint, globalTimer, assertions, showNextBtn,\r\n      stopTimer, soundTrue } = this.props;\r\n    stopTimer();\r\n    const DEZ = 10;\r\n    const point = DEZ + (globalTimer * this.multiplier);\r\n    this.localStorageNewSave(point, assertions);\r\n    addPoint(point, (assertions + 1));\r\n    showNextBtn(true);\r\n    disableBtnsAfterTimer();\r\n    if (soundTrue) playCerta();\r\n  }\r\n\r\n  validateScore(e) {\r\n    const {\r\n      triviaQuestions, idTrivia: id,\r\n      showNextBtn, stopTimer, soundTrue,\r\n    } = this.props;\r\n    const { difficulty } = triviaQuestions[id];\r\n    this.multiplier = 0;\r\n\r\n    switch (difficulty) {\r\n    case 'easy':\r\n      this.multiplier = 1;\r\n      break;\r\n\r\n    case 'medium':\r\n      this.multiplier = 2;\r\n      break;\r\n\r\n    case 'hard':\r\n      this.multiplier = 3;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n    }\r\n    if (e.target.id === 'correct-answear') {\r\n      this.manageCorrectAnswear();\r\n    } else if (e.target.id === 'incorrect-answear') {\r\n      if (soundTrue) playErrou();\r\n      disableBtnsAfterTimer();\r\n      stopTimer();\r\n      showNextBtn(true);\r\n    }\r\n  }\r\n\r\n  localStorageNewSave(point, assertions) {\r\n    const {\r\n      playerName,\r\n      playerEmail,\r\n      getCategoryConfigFromStore,\r\n      getAnswearConfigFromStore, getDificultyConfigFromStore } = this.props;\r\n    const previousScore = JSON.parse(localStorage.state).player.score;\r\n    const picture = JSON.parse(localStorage.state).player.photo;\r\n    const player = {\r\n      player: {\r\n        name: playerName,\r\n        assertions: assertions + 1,\r\n        score: previousScore + point,\r\n        gravatarEmail: playerEmail,\r\n        photo: picture,\r\n        categoryConfig: getCategoryConfigFromStore,\r\n        answearConfig: getAnswearConfigFromStore,\r\n        dificultyConfig: getDificultyConfigFromStore,\r\n      },\r\n    };\r\n    localStorage.state = JSON.stringify(player);\r\n  }\r\n\r\n  generateQuestionsBtnFunc() {\r\n    const { incorrectQuest, correctAnswears,\r\n      idTrivia: id } = this.props;\r\n    return (\r\n      <div className=\"options-container\">\r\n        { incorrectQuest[id].map((item, index) => (\r\n          <button\r\n            id=\"incorrect-answear\"\r\n            type=\"button\"\r\n            key={ `wrong-answer-${index}` }\r\n            className=\"inputNeon-purple\"\r\n            data-testid={ `wrong-answer-${index}` }\r\n            onClick={ (e) => { changeBorderColor(); this.validateScore(e); } }\r\n          >\r\n            { item }\r\n          </button>\r\n        )) }\r\n        <button\r\n          type=\"button\"\r\n          id=\"correct-answear\"\r\n          className=\"inputNeon-purple correct-question\"\r\n          data-testid=\"correct-answer\"\r\n          onClick={ (e) => { changeBorderColor(); this.validateScore(e); } }\r\n        >\r\n          { correctAnswears[id] }\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      triviaQuestions, idTrivia: id, func, globalTimer, shouldShowNextBtn,\r\n      showNextBtn,\r\n    } = this.props;\r\n    const { category, question } = triviaQuestions[id];\r\n    if (globalTimer <= 0) {\r\n      disableBtnsAfterTimer();\r\n      changeBorderColor();\r\n      showNextBtn(true);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Timer />\r\n        <div className=\"question-container\">\r\n          <div className=\"neon-border-question\">\r\n            <img alt=\"\" src={ quot1 } className=\"quot-1\" />\r\n            <div className=\"question-div\">\r\n              <QuestionPainel />\r\n              <h4 data-testid=\"question-category\" className=\"questions-cat\">\r\n                Category:\r\n                { category }\r\n              </h4>\r\n              <h3 data-testid=\"question-text\" className=\"questions-text\">{ question }</h3>\r\n            </div>\r\n            <img alt=\"\" src={ quot2 } className=\"quot-2\" />\r\n          </div>\r\n          <div>\r\n            { this.generateQuestionsBtnFunc() }\r\n            {\r\n              shouldShowNextBtn ? (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={ func }\r\n                  className=\"btn-neon-red\"\r\n                  data-testid=\"btn-next\"\r\n                >\r\n                  Próxima\r\n                </button>) : ''\r\n            }\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  triviaQuestions: state.questions.questions,\r\n  incorrectQuest: state.questions.incorrectAnswears,\r\n  correctAnswears: state.questions.correctAnswears,\r\n  idTrivia: state.questions.idTrivia,\r\n  runningTimer: state.gameMechanics.timerRunning,\r\n  globalTimer: state.gameMechanics.timeToRespond,\r\n  stopTimer: state.gameMechanics.stopTimerFunc,\r\n  shouldShowNextBtn: state.gameMechanics.showNextBtn,\r\n  score: state.player.score,\r\n  assertions: state.player.assertions,\r\n  playerName: state.player.name,\r\n  playerEmail: state.player.gravatarEmail,\r\n  getCategoryConfigFromStore: state.gameMechanics.categoryValue,\r\n  getAnswearConfigFromStore: state.gameMechanics.answearType,\r\n  getDificultyConfigFromStore: state.gameMechanics.dificulty,\r\n  soundTrue: state.questions.playSound,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addPoint: (point, assertions) => dispatch(increasePlayerScore(point, assertions)),\r\n  showNextBtn: (boolean) => dispatch(modifyNextBtn(boolean)),\r\n  sendAbleQuestBtnFunc: (func) => dispatch(allowQuestionsBtnAfterNextClick(func)),\r\n  modifyTimerRunning: (bool) => dispatch(modifyTimer(bool)),\r\n  increasePlayedQuestions: () => dispatch(addQuestionsPlayed()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\r\n\r\nQuestions.propTypes = ({\r\n  triviaQuestions: PropTypes.arrayOf(Object),\r\n  idTrivia: PropTypes.number,\r\n  func: PropTypes.func,\r\n  globalTimer: PropTypes.number.isRequired,\r\n  addPoint: PropTypes.func,\r\n  showNextBtn: PropTypes.func,\r\n  shouldShowNextBtn: PropTypes.bool.isRequired,\r\n  sendAbleQuestBtnFunc: PropTypes.func,\r\n  assertions: PropTypes.number.isRequired,\r\n  stopTimer: PropTypes.func,\r\n  incorrectQuest: PropTypes.arrayOf(Array),\r\n  correctAnswears: PropTypes.arrayOf(Array),\r\n  playerName: PropTypes.string.isRequired,\r\n  playerEmail: PropTypes.string.isRequired,\r\n  getCategoryConfigFromStore: PropTypes.string.isRequired,\r\n  getAnswearConfigFromStore: PropTypes.string.isRequired,\r\n  getDificultyConfigFromStore: PropTypes.string.isRequired,\r\n  soundTrue: PropTypes.bool.isRequired,\r\n});\r\n\r\nQuestions.defaultProps = {\r\n  idTrivia: 0,\r\n  triviaQuestions: [],\r\n  func: {},\r\n  addPoint: PropTypes.func,\r\n  showNextBtn: PropTypes.func,\r\n  sendAbleQuestBtnFunc: PropTypes.func,\r\n  stopTimer: PropTypes.func,\r\n  incorrectQuest: PropTypes.arrayOf(Array),\r\n  correctAnswears: PropTypes.arrayOf(Array),\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport border from '../images/header_base.png';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { profileImg, profileName, profileScore } = this.props;\r\n    return (\r\n      <div>\r\n        <header className=\"header-body\">\r\n          <img\r\n            src={ profileImg }\r\n            data-testid=\"header-profile-picture\"\r\n            alt=\"User profile\"\r\n          />\r\n          <span\r\n            data-testid=\"header-player-name\"\r\n            className=\"header-player-name\"\r\n          >\r\n            { profileName }\r\n          </span>\r\n          <div className=\"score-div-container\">\r\n            <span className=\"text-score\">\r\n              SCORE\r\n            </span>\r\n            <span\r\n              className=\"ingame-score-number\"\r\n              data-testid=\"header-score\"\r\n            >\r\n              { profileScore }\r\n            </span>\r\n          </div>\r\n\r\n        </header>\r\n        <div className=\"border-header\">\r\n          <img src={ border } alt=\"\" className=\"img-border\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profileImg: state.player.srcGravatarImg,\r\n  profileName: state.player.name,\r\n  profileScore: state.player.score,\r\n});\r\n\r\n// const mapDispatchToProps = {\r\n//   return;\r\n// };\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n\r\nHeader.propTypes = {\r\n  profileImg: PropTypes.string.isRequired,\r\n  profileName: PropTypes.string.isRequired,\r\n  profileScore: PropTypes.number.isRequired,\r\n};\r\n","function FormatCorrectQuestion(questionList) {\n  const correct = questionList.map((item) => {\n    item = item.replace(/&quot;/gi, '\"');\n    item = item.replace(/&#039;/gi, '');\n    item = item.replace(/&eacute;/gi, 'é');\n    item = item.replace(/&amp;/gi, '');\n    item = item.replace(/&lt;/gi, '');\n    item = item.replace(/&;/gi, '');\n    item = item.replace(/&/gi, '');\n    item = item.replace(/;/gi, '');\n    return item;\n  });\n  return correct;\n}\n\nfunction FormatIncorrectQuestions(questionList) {\n  const mapao = questionList.map((item) => {\n    const mapinha = item.map((quest) => {\n      quest = quest.replace(/&quot;/gi, '\"');\n      quest = quest.replace(/&#039;/gi, '');\n      quest = quest.replace(/&eacute;/gi, 'é');\n      quest = quest.replace(/&amp;/gi, '');\n      quest = quest.replace(/&lt;/gi, '');\n      quest = quest.replace(/&;/gi, '');\n      quest = quest.replace(/&/gi, '');\n      quest = quest.replace(/;/gi, '');\n      return quest;\n    });\n    return mapinha;\n  });\n  return mapao;\n}\n\nfunction FormatQuestions(questionList) {\n  const questions = questionList.map((item) => {\n    item.question = item.question.replace(/&quot;/gi, '\"');\n    item.question = item.question.replace(/&#039;/gi, '');\n    item.question = item.question.replace(/&eacute;/gi, 'é');\n    item.question = item.question.replace(/&amp;/gi, '');\n    item.question = item.question.replace(/&lt;/gi, '');\n    item.question = item.question.replace(/&;/gi, '');\n    item.question = item.question.replace(/&/gi, '');\n    item.question = item.question.replace(/;/gi, '');\n    return item;\n  });\n  return questions;\n}\n\nexport {\n  FormatQuestions,\n  FormatIncorrectQuestions,\n  FormatCorrectQuestion,\n};\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass BackToLoginGame extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loadind-div\">\r\n        <p className=\"about-description\">\r\n          Se você estiver vendo esta tela por mais de 5 segundos,\r\n          não encontramos nenhuma pergunta com as configurações que você escolheu!\r\n          <br />\r\n          Volte a tela de login e escolha outras configurações!!\r\n        </p>\r\n        <Link to=\"/Trivia_Project\" style={ { textDecoration: 'none' } }>\r\n          <div className=\"setup-back-home\">\r\n            <button\r\n              type=\"button\"\r\n              data-testid=\"btn-go-home\"\r\n              className=\"btn-neon-blue back-home\"\r\n            >\r\n              Voltar ao login\r\n            </button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BackToLoginGame;\r\n","import React, { Component } from 'react';\nimport BackToLoginGame from './BackToLoginGame';\n\nclass Loading extends Component {\n  render() {\n    return (\n\n      <>\n        <div className=\"loading\">\n          Loading Questions...\n        </div>\n        <div className=\"loading-circle\" />\n        <br />\n        <BackToLoginGame />\n\n      </>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Questions from '../components/Questions';\r\nimport { questionIdIncrease, modifyTimer, InitiateTimer, modifyNextBtn,\r\n  addQuestionsPlayed, resetTriviaQuestionsIdAndPlayedQuestions,\r\n  sendQuestions, recoverNameAndEmailFromRefresh,\r\n  sendConfigOptionsAction, modifyPlayingTruOrFalse,\r\n} from '../redux/actions';\r\nimport { getQuestions } from '../services/TriviaApi';\r\nimport '../App.css';\r\nimport Header from '../components/Header';\r\nimport { FormatQuestions, FormatCorrectQuestion,\r\n  FormatIncorrectQuestions } from '../helpers/FormatQuestions';\r\nimport Loading from '../components/Loading';\r\nimport { playProxima, stopCertaErrouSound } from '../components/SoundControl';\r\nimport { randomizeCorrectQuestion } from '../helpers/FunctionsHelpers';\r\n\r\nconst TRINTA = 30;\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirectToFeedBack: false,\r\n      componentMounted: false,\r\n    };\r\n    this.handleClickNextBtn = this.handleClickNextBtn.bind(this);\r\n    this.resetQuestionsBorderColor = this.resetQuestionsBorderColor.bind(this);\r\n    this.getQuestionList = this.getQuestionList.bind(this);\r\n    this.checkApiResponseValidity = this.checkApiResponseValidity.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sendRecoveredPlayerInfo,\r\n      sendRecoveredGameConfigToStore } = this.props;\r\n    const {\r\n      name,\r\n      gravatarEmail,\r\n      photo: img,\r\n      categoryConfig: category,\r\n      answearConfig: answear,\r\n      dificultyConfig: dificulty,\r\n    } = JSON.parse(localStorage.state).player;\r\n    const photo = img;\r\n    sendRecoveredGameConfigToStore(category, answear, dificulty);\r\n    sendRecoveredPlayerInfo(name, gravatarEmail, photo);\r\n    const player = {\r\n      player: {\r\n        name,\r\n        assertions: 0,\r\n        score: 0,\r\n        gravatarEmail,\r\n        photo: img,\r\n        categoryConfig: category,\r\n        answearConfig: answear,\r\n        dificultyConfig: dificulty,\r\n      },\r\n    };\r\n    const time = 700;\r\n    localStorage.state = JSON.stringify(player);\r\n    setTimeout(() => {\r\n      this.getQuestionList();\r\n    }, time);\r\n  }\r\n\r\n  async getQuestionList() {\r\n    const {\r\n      token,\r\n      sendQuestionList,\r\n      getCategoryConfigFromStore: category,\r\n      getAnswearConfigFromStore: answear,\r\n      getDifficultyConfigFromStore: difficulty,\r\n    } = this.props;\r\n    const receiveQuestions = await getQuestions(token, category, answear, difficulty);\r\n\r\n    const questionList = [];\r\n    receiveQuestions.forEach((item) => {\r\n      questionList.push(item);\r\n    });\r\n\r\n    const incorrectList = [];\r\n    receiveQuestions.forEach((item) => {\r\n      incorrectList.push(item.incorrect_answers);\r\n    });\r\n\r\n    const correctList = [];\r\n    receiveQuestions.forEach((item) => {\r\n      correctList.push(item.correct_answer);\r\n    });\r\n\r\n    const questions = FormatQuestions(questionList);\r\n    const incorrectQuestions = FormatIncorrectQuestions(incorrectList);\r\n    const correctQuestions = FormatCorrectQuestion(correctList);\r\n\r\n    sendQuestionList(questions, incorrectQuestions, correctQuestions);\r\n    this.setState({\r\n      componentMounted: true,\r\n    });\r\n  }\r\n\r\n  checkApiResponseValidity() {\r\n    const { questionListLength } = this.props;\r\n    const timeOut = 1000;\r\n    setTimeout(() => {\r\n      if (questionListLength.length > 0) {\r\n        const { playingTrue } = this.props;\r\n        playingTrue(true);\r\n      }\r\n    }, timeOut);\r\n  }\r\n\r\n  handleClickNextBtn() {\r\n    const {\r\n      increaseId, idTrivia, AddTimeToTimer, resetTimer,\r\n      showNextBtn, allowQuestionsBtn,\r\n      totalQuestions, resetQuestionsId, increasePlayedQuestions,\r\n      soundTrue,\r\n    } = this.props;\r\n    randomizeCorrectQuestion();\r\n    showNextBtn(false);\r\n    increaseId(idTrivia + 1);\r\n    allowQuestionsBtn();\r\n    increasePlayedQuestions();\r\n    AddTimeToTimer(TRINTA);\r\n    resetTimer();\r\n    this.resetQuestionsBorderColor();\r\n    const questionNumber = 5;\r\n    stopCertaErrouSound();\r\n    if (soundTrue && totalQuestions < questionNumber) playProxima();\r\n    if (totalQuestions === questionNumber) {\r\n      resetQuestionsId();\r\n      return (\r\n        this.setState({\r\n          redirectToFeedBack: true,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  resetQuestionsBorderColor() {\r\n    const wrong = document.querySelectorAll('#incorrect-answear');\r\n    const correct = document.querySelector('#correct-answear');\r\n    wrong.forEach((element) => {\r\n      element.style.border = '';\r\n    });\r\n    correct.style.border = '';\r\n  }\r\n\r\n  render() {\r\n    const { redirectToFeedBack, componentMounted } = this.state;\r\n    const { playing } = this.props;\r\n    if (redirectToFeedBack) return <Redirect to=\"/feedback\" />;\r\n    return (\r\n      <>\r\n        {this.checkApiResponseValidity()}\r\n        <Header />\r\n        <div className=\"game-container\">\r\n          {\r\n            playing && componentMounted ? <Questions\r\n              func={ this.handleClickNextBtn }\r\n            /> : <Loading />\r\n          }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  idTrivia: state.questions.idTrivia,\r\n  resetTimer: state.gameMechanics.resetTimerFunc,\r\n  stopTimerfunc: state.gameMechanics.stopTimerFunc,\r\n  allowQuestionsBtn: state.gameMechanics.allowQuestionsBtns,\r\n  runningTimer: state.gameMechanics.timerRunning,\r\n  totalQuestions: state.player.questionsPlayed,\r\n  token: state.player.token,\r\n  getCategoryConfigFromStore: state.gameMechanics.categoryValue,\r\n  getAnswearConfigFromStore: state.gameMechanics.answearType,\r\n  getDifficultyConfigFromStore: state.gameMechanics.dificulty,\r\n  playing: state.questions.playing,\r\n  questionListLength: state.questions.questions,\r\n  soundTrue: state.questions.playSound,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  increaseId: (increase) => dispatch(questionIdIncrease(increase)),\r\n  timerBoolean: (boolean) => dispatch(modifyTimer(boolean)),\r\n  AddTimeToTimer: (startTimer) => dispatch(InitiateTimer(startTimer)),\r\n  showNextBtn: (boolean) => dispatch(modifyNextBtn(boolean)),\r\n  increasePlayedQuestions: () => dispatch(addQuestionsPlayed()),\r\n  resetQuestionsId: () => (dispatch(resetTriviaQuestionsIdAndPlayedQuestions())),\r\n  sendQuestionList: (quest, inc, corre) => dispatch(sendQuestions(quest, inc, corre)),\r\n  sendRecoveredPlayerInfo: (name, email, img) => (\r\n    dispatch(recoverNameAndEmailFromRefresh(name, email, img))),\r\n  sendRecoveredGameConfigToStore: (category, answear, dificulty) => (\r\n    dispatch(sendConfigOptionsAction(category, answear, dificulty))),\r\n  playingTrue: (bool) => dispatch(modifyPlayingTruOrFalse(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n\r\nGame.propTypes = {\r\n  idTrivia: PropTypes.number,\r\n  increaseId: PropTypes.func.isRequired,\r\n  AddTimeToTimer: PropTypes.func,\r\n  resetTimer: PropTypes.func,\r\n  showNextBtn: PropTypes.func,\r\n  allowQuestionsBtn: PropTypes.func,\r\n  totalQuestions: PropTypes.number.isRequired,\r\n  resetQuestionsId: PropTypes.func,\r\n  sendQuestionList: PropTypes.func,\r\n  token: PropTypes.string.isRequired,\r\n  sendRecoveredPlayerInfo: PropTypes.func,\r\n  increasePlayedQuestions: PropTypes.func,\r\n  sendRecoveredGameConfigToStore: PropTypes.func,\r\n  getCategoryConfigFromStore: PropTypes.string.isRequired,\r\n  getAnswearConfigFromStore: PropTypes.string.isRequired,\r\n  getDifficultyConfigFromStore: PropTypes.string.isRequired,\r\n  playingTrue: PropTypes.func,\r\n  playing: PropTypes.bool,\r\n  questionListLength: PropTypes.arrayOf(Array).isRequired,\r\n  soundTrue: PropTypes.bool.isRequired,\r\n};\r\n\r\nGame.defaultProps = {\r\n  idTrivia: 0,\r\n  AddTimeToTimer: PropTypes.func,\r\n  resetTimer: PropTypes.func,\r\n  showNextBtn: PropTypes.func,\r\n  allowQuestionsBtn: PropTypes.func,\r\n  resetQuestionsId: PropTypes.func,\r\n  sendQuestionList: PropTypes.func,\r\n  sendRecoveredPlayerInfo: PropTypes.func,\r\n  increasePlayedQuestions: PropTypes.func,\r\n  sendRecoveredGameConfigToStore: PropTypes.func,\r\n  playingTrue: PropTypes.func,\r\n  playing: false,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport back from '../images/back_3.png';\r\nimport trophy from '../images/trophy_1.png';\r\nimport { modifyPlayingTruOrFalse } from '../redux/actions';\r\nimport '../App.css';\r\n\r\nclass FeedBack extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n    this.handleClickRankBtn = this.handleClickRankBtn.bind(this);\r\n    this.createRankingStorage = this.createRankingStorage.bind(this);\r\n    this.playAgain = this.playAgain.bind(this);\r\n    this.PlayAgainClickhandler = this.PlayAgainClickhandler.bind(this);\r\n  }\r\n\r\n  handleClickRankBtn() {\r\n    this.createRankingStorage();\r\n    const { playingfalse } = this.props;\r\n    playingfalse(false);\r\n  }\r\n\r\n  createRankingStorage() {\r\n    const { name, score, picture } = this.props;\r\n    const userRanking = {\r\n      name,\r\n      score,\r\n      picture,\r\n    };\r\n    if (!localStorage.ranking || localStorage.ranking.length === 0) {\r\n      localStorage.ranking = JSON.stringify([userRanking]);\r\n    } else {\r\n      const localStorageRanking = JSON.parse(localStorage.ranking);\r\n      localStorageRanking.push(userRanking);\r\n      localStorage.ranking = JSON.stringify(localStorageRanking);\r\n    }\r\n  }\r\n\r\n  PlayAgainClickhandler() {\r\n    const { playingfalse } = this.props;\r\n    playingfalse(false);\r\n  }\r\n\r\n  // Finalizado\r\n  playAgain() {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"btn-play-again\"\r\n        className=\"play-again btn-neon-red\"\r\n        onClick={ this.PlayAgainClickhandler }\r\n      >\r\n        Jogar novamente\r\n      </button>);\r\n  }\r\n\r\n  render() {\r\n    const { score, assertion } = this.props;\r\n    const expectedAssertions = 3;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"feedback-page\">\r\n\r\n          <h3 data-testid=\"feedback-text\" className=\"feedback-text\">\r\n            FeedBack:\r\n          </h3>\r\n          <h2 data-testid=\"feedback-text\" className=\"feedback-result neonText\">\r\n            { assertion < expectedAssertions ? 'Podia ser melhor...' : 'Mandou bem!' }\r\n          </h2>\r\n          <h1\r\n            data-testid=\"feedback-total-score\"\r\n            className=\"final-score\"\r\n          >\r\n            { score }\r\n          </h1>\r\n          <h1\r\n            data-testid=\"feedback-total-question\"\r\n            className=\"feedback-points\"\r\n          >\r\n            { assertion }\r\n            <span> acertos </span>\r\n          </h1>\r\n          <Link to=\"/Trivia_Project\" style={ { textDecoration: 'none' } }>\r\n            <div className=\"div-play-again\">\r\n              <img src={ back } alt=\"Voltar\" className=\"back-img\" />\r\n              { this.playAgain() }\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/ranking\" style={ { textDecoration: 'none' } }>\r\n            <div className=\"div-btn-ranking\">\r\n              <img src={ trophy } alt=\"Ranking\" className=\"ranking-img\" />\r\n              <button\r\n                onClick={ this.handleClickRankBtn }\r\n                type=\"button\"\r\n                data-testid=\"btn-ranking\"\r\n                className=\"btn-neon-blue btn-ranking\"\r\n              >\r\n                Ver Ranking\r\n              </button>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  picture: state.player.srcGravatarImg,\r\n  name: state.player.name,\r\n  score: state.player.score,\r\n  assertion: state.player.assertions,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  playingfalse: (bool) => dispatch(modifyPlayingTruOrFalse(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedBack);\r\n\r\nFeedBack.propTypes = {\r\n  picture: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  assertion: PropTypes.number.isRequired,\r\n  playingfalse: PropTypes.func,\r\n};\r\n\r\nFeedBack.defaultProps = {\r\n  playingfalse: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport back from '../images/back_4.png';\r\nimport trophy from '../images/trophy_1.png';\r\nimport { modifyPlayingTruOrFalse } from '../redux/actions';\r\nimport '../App.css';\r\n\r\nclass Ranking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirectHome: false,\r\n    };\r\n    this.renderRanking = this.renderRanking.bind(this);\r\n    this.backHomeClickHandler = this.backHomeClickHandler.bind(this);\r\n  }\r\n\r\n  backHomeClickHandler() {\r\n    const { playingfalse } = this.props;\r\n    playingfalse(false);\r\n    this.setState({\r\n      redirectHome: true,\r\n    });\r\n  }\r\n\r\n  renderRanking() {\r\n    const ranking = JSON.parse(localStorage.ranking);\r\n    const rankingSorted = ranking.sort((a, b) => b.score - a.score);\r\n    return (\r\n      rankingSorted.map((user, index) => (\r\n        <>\r\n          <div className=\"user-rank-data\" key={ index }>\r\n            <span className=\"ranking-number\">{ index + 1 }</span>\r\n            <img src={ user.picture } alt={ user.name } />\r\n            <p\r\n              data-testid={ `player-name-${index}` }\r\n              className=\"ranking-player-name\"\r\n            >\r\n              { user.name }\r\n            </p>\r\n            <p\r\n              data-testid={ `player-score-${index}` }\r\n              className=\"ranking-score\"\r\n            >\r\n              { user.score }\r\n            </p>\r\n          </div>\r\n          <hr />\r\n        </>\r\n      ))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { redirectHome } = this.state;\r\n    if (redirectHome) return <Redirect to=\"/Trivia_Project\" />;\r\n    return (\r\n      <div className=\"page-ranking\">\r\n        <div className=\"header-ranking\">\r\n          <img src={ trophy } alt=\"Ranking\" className=\"ranking-img-trophy\" />\r\n          <h2 data-testid=\"ranking-title\" className=\"title-ranking\">Ranking</h2>\r\n        </div>\r\n        <div className=\"div-users-ranking\">\r\n          { this.renderRanking() }\r\n        </div>\r\n        <div className=\"ranking-back-home\">\r\n          <img src={ back } alt=\"Voltar\" className=\"back-img-home\" />\r\n          <button\r\n            type=\"button\"\r\n            data-testid=\"btn-go-home\"\r\n            className=\"btn-neon-blue back-home\"\r\n            onClick={ this.backHomeClickHandler }\r\n          >\r\n            Voltar ao início\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  playingfalse: (bool) => dispatch(modifyPlayingTruOrFalse(bool)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Ranking);\r\n\r\nRanking.propTypes = {\r\n  playingfalse: PropTypes.func,\r\n};\r\n\r\nRanking.defaultProps = {\r\n  playingfalse: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport back from '../images/back_4.png';\r\nimport about from '../images/about.png';\r\nimport arrow1 from '../images/back_1.png';\r\nimport arrow2 from '../images/back_3.png';\r\n\r\nclass About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.HomeBtnRender = this.HomeBtnRender.bind(this);\r\n  }\r\n\r\n  HomeBtnRender() {\r\n    return (\r\n      <Link to=\"/Trivia_Project\" style={ { textDecoration: 'none' } }>\r\n        <div className=\"about-back-home\">\r\n          <img src={ back } alt=\"Voltar\" className=\"back-img-home\" />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-neon-blue back-home\"\r\n          >\r\n            Voltar ao Login\r\n          </button>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about\">\r\n        <div className=\"header-about\">\r\n          <img src={ about } alt=\"\" className=\"about-img\" />\r\n          <h2 className=\"title-about\">Grupo 28</h2>\r\n          <span className=\"name-group\">[UNNAMED]</span>\r\n        </div>\r\n        <h3>Olá, somos um grupo de estudantes da escola Trybe! #BeTrybe</h3>\r\n        <h3>Nosso time se compõem pelos seguintes integrantes:</h3>\r\n        <div className=\"group-names\">\r\n          <img src={ arrow1 } className=\"arrow\" alt=\"\" />\r\n          <h4 className=\"about-name\">\r\n            Marcos Mantovani\r\n            <br />\r\n            Diogo Augusto\r\n            <br />\r\n            Johnata Pontes\r\n            <br />\r\n            Camilo Lelis\r\n          </h4>\r\n          <img src={ arrow2 } className=\"arrow\" alt=\"\" />\r\n        </div>\r\n        <p className=\"about-description\">\r\n          Neste projeto testamos nossos conhecimentos referente a\r\n          Redux e tudo oque vimos em FrontEnd!\r\n        </p>\r\n        <p className=\"about-description\">\r\n          Realmente foi um desafio fazer uma aplicação como essa a prova de bugs\r\n          e tentar ao máximo deixar o código limpo, legível e ainda conseguir\r\n          ficar de bem com o Evaluator.\r\n        </p>\r\n        <p className=\"about-description\">\r\n          Estamos muito Orgulhosos com o resultado!\r\n        </p>\r\n        <p className=\"about-description\">\r\n          Esperamos que você possa se divertir com nossa aplicação/Game,\r\n          Tenha um bom jogo!\r\n        </p>\r\n\r\n        <p className=\"about-description\">\r\n          Versão: 1.0\r\n          <br />\r\n          Principal desenvolvedor/ Tech Lead / Game Mechanics: Marcos Mantovani\r\n          <br />\r\n          Design / css Style: Diogo Augusto\r\n          <br />\r\n          Principal programador de Botão: Camilo\r\n          <br />\r\n          Auxiliar técnico: Johnata\r\n        </p>\r\n        <p className=\"about-description\">\r\n          Versão Mobile ainda em desenvolvimento.\r\n        </p>\r\n        { this.HomeBtnRender() }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './pages/Login';\r\nimport Setup from './pages/Setup';\r\nimport Game from './pages/Game';\r\nimport FeedBack from './pages/FeedBack';\r\nimport Ranking from './pages/Ranking';\r\nimport About from './pages/About';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/Setup\"><Setup /></Route>\r\n        <Route exact path=\"/Trivia_Project\" render={ () => <Login /> } />\r\n        <Route exact path=\"/game\" render={ () => <Game /> } />\r\n        <Route exact path=\"/feedback\" render={ () => <FeedBack /> } />\r\n        <Route exact path=\"/ranking\" component={ Ranking } />\r\n        <Route exact path=\"/about\" component={ About } />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  SEND_QUESTIONS,\r\n  QUESTION_ID_INCREASE,\r\n  RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS,\r\n  MODIFY_PLAYING_TRUE_FALSE,\r\n  MODIFY_PLAY_SOUND,\r\n\r\n} from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  idTrivia: 0,\r\n  questions: [],\r\n  incorrectAnswears: [],\r\n  correctAnswears: [],\r\n  playing: false,\r\n  playSound: false,\r\n};\r\n\r\nfunction trivia(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case SEND_QUESTIONS:\r\n    return ({\r\n      ...state,\r\n      questions: [...action.questions],\r\n      incorrectAnswears: action.incorrect,\r\n      correctAnswears: action.correct,\r\n    });\r\n  case QUESTION_ID_INCREASE:\r\n    return ({\r\n      ...state,\r\n      idTrivia: action.increase,\r\n    });\r\n  case RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS:\r\n    return ({\r\n      ...state,\r\n      idTrivia: 0,\r\n    });\r\n  case MODIFY_PLAYING_TRUE_FALSE:\r\n    return ({\r\n      ...state,\r\n      playing: action.bool,\r\n    });\r\n  case MODIFY_PLAY_SOUND:\r\n    return ({\r\n      ...state,\r\n      playSound: action.bool,\r\n    });\r\n\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default trivia;\r\n","import {\r\n  SEND_GRAVATAR_SRC_IMG,\r\n  INCREASE_PLAYER_SCORE,\r\n  ADD_QUESTIONS_PLAYED,\r\n  RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS,\r\n  RESET_STORE_SCORES,\r\n  RECOVER_NAME_AND_EMAIL_FROM_REFRESH,\r\n\r\n} from '../actions/index';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  assertions: 0,\r\n  score: 0,\r\n  gravatarEmail: '',\r\n  srcGravatarImg: '',\r\n  token: '',\r\n  questionsPlayed: 1,\r\n};\r\n\r\nfunction player(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case SEND_GRAVATAR_SRC_IMG:\r\n    return {\r\n      ...state,\r\n      srcGravatarImg: action.src,\r\n      name: action.name,\r\n      gravatarEmail: action.email,\r\n      token: action.token,\r\n    };\r\n  case INCREASE_PLAYER_SCORE:\r\n    return {\r\n      ...state,\r\n      score: state.score + action.increase,\r\n      assertions: action.assertions,\r\n    };\r\n  case ADD_QUESTIONS_PLAYED:\r\n    return {\r\n      ...state,\r\n      questionsPlayed: state.questionsPlayed + 1,\r\n    };\r\n  case RESET_TRIVIA_QUESTIONSID_AND_PLAYED_QUESTIONS:\r\n    return {\r\n      ...state,\r\n      questionsPlayed: 1,\r\n    };\r\n  case RESET_STORE_SCORES:\r\n    return {\r\n      ...state,\r\n      score: action.score,\r\n      assertions: action.assertions,\r\n    };\r\n  case RECOVER_NAME_AND_EMAIL_FROM_REFRESH:\r\n    return {\r\n      ...state,\r\n      name: action.name,\r\n      gravatarEmail: action.email,\r\n      srcGravatarImg: action.img,\r\n    };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default player;\r\n","import {\r\n  DECREASE_TIME_TO_RESPOND,\r\n  INITIATE_TIMER,\r\n  STOP_N_RESET_TIMER_FUNCTION,\r\n  MODIFY_TIMER,\r\n  MODIFY_NEXT_BTN,\r\n  ALLOW_QUESTIONS_BTN_AFTER_NEXT_CLICK,\r\n  SEND_CONFIG_OPTIONS,\r\n} from '../actions/index';\r\n\r\nconst INITIAL_STATE = {\r\n  timeToRespond: 30,\r\n  timerRunning: true,\r\n  showNextBtn: false,\r\n  categoryValue: '',\r\n  answearType: '',\r\n  dificulty: '',\r\n};\r\n\r\nfunction gameMechanics(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case INITIATE_TIMER:\r\n    return {\r\n      ...state,\r\n      timeToRespond: action.startTimer,\r\n    };\r\n\r\n  case DECREASE_TIME_TO_RESPOND:\r\n    return {\r\n      ...state,\r\n      timeToRespond: action.time,\r\n    };\r\n\r\n  case STOP_N_RESET_TIMER_FUNCTION:\r\n    return {\r\n      ...state,\r\n      stopTimerFunc: action.stop,\r\n      resetTimerFunc: action.reset,\r\n    };\r\n\r\n  case MODIFY_TIMER:\r\n    return {\r\n      ...state,\r\n      timerRunning: action.boolean,\r\n    };\r\n  case MODIFY_NEXT_BTN:\r\n    return {\r\n      ...state,\r\n      showNextBtn: action.boolean,\r\n    };\r\n  case ALLOW_QUESTIONS_BTN_AFTER_NEXT_CLICK:\r\n    return {\r\n      ...state,\r\n      allowQuestionsBtns: action.func,\r\n    };\r\n  case SEND_CONFIG_OPTIONS:\r\n    return {\r\n      ...state,\r\n      categoryValue: action.category,\r\n      answearType: action.answear,\r\n      dificulty: action.dificulty,\r\n    };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default gameMechanics;\r\n","import { combineReducers } from 'redux';\r\nimport questions from './questions';\r\nimport player from './player';\r\nimport gameMechanics from './gameMechanics';\r\n\r\nconst rootReducers = combineReducers({\r\n  questions,\r\n  player,\r\n  gameMechanics,\r\n});\r\n\r\nexport default rootReducers;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk)),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}